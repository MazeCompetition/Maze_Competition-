
Maze_Competition.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000145e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  0000145e  000014f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000014  00800076  00800076  00001508  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001508  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001564  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000200  00000000  00000000  000015a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002a2f  00000000  00000000  000017a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d9c  00000000  00000000  000041cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000017b1  00000000  00000000  00004f6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000740  00000000  00000000  0000671c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a66  00000000  00000000  00006e5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001c5d  00000000  00000000  000078c2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c8  00000000  00000000  0000951f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 25 04 	jmp	0x84a	; 0x84a <__vector_4>
      14:	0c 94 fe 03 	jmp	0x7fc	; 0x7fc <__vector_5>
      18:	0c 94 4c 04 	jmp	0x898	; 0x898 <__vector_6>
      1c:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__vector_7>
      20:	0c 94 9a 04 	jmp	0x934	; 0x934 <__vector_8>
      24:	0c 94 c1 04 	jmp	0x982	; 0x982 <__vector_9>
      28:	0c 94 d7 03 	jmp	0x7ae	; 0x7ae <__vector_10>
      2c:	0c 94 b0 03 	jmp	0x760	; 0x760 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e5       	ldi	r30, 0x5E	; 94
      68:	f4 e1       	ldi	r31, 0x14	; 20
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a6 37       	cpi	r26, 0x76	; 118
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a6 e7       	ldi	r26, 0x76	; 118
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	aa 38       	cpi	r26, 0x8A	; 138
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 80 02 	call	0x500	; 0x500 <main>
      8a:	0c 94 2d 0a 	jmp	0x145a	; 0x145a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <time>:
      92:	fc 01       	movw	r30, r24
      94:	0f b6       	in	r0, 0x3f	; 63
      96:	f8 94       	cli
      98:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <__system_time>
      9c:	70 91 87 00 	lds	r23, 0x0087	; 0x800087 <__system_time+0x1>
      a0:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__system_time+0x2>
      a4:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__system_time+0x3>
      a8:	0f be       	out	0x3f, r0	; 63
      aa:	30 97       	sbiw	r30, 0x00	; 0
      ac:	21 f0       	breq	.+8      	; 0xb6 <time+0x24>
      ae:	60 83       	st	Z, r22
      b0:	71 83       	std	Z+1, r23	; 0x01
      b2:	82 83       	std	Z+2, r24	; 0x02
      b4:	93 83       	std	Z+3, r25	; 0x03
      b6:	08 95       	ret

000000b8 <LCD_WRITE_COMMAND>:
		GOTO_XY(0,1);
	}
	else if (COUNT_CHAR == 32){
		COUNT_CHAR = 0;
		LCD_WRITE_COMMAND(LCD_Clear_Display);
		GOTO_XY(0,0);
      b8:	4b b3       	in	r20, 0x1b	; 27
      ba:	98 2f       	mov	r25, r24
      bc:	90 7f       	andi	r25, 0xF0	; 240
      be:	29 2f       	mov	r18, r25
      c0:	30 e0       	ldi	r19, 0x00	; 0
      c2:	35 95       	asr	r19
      c4:	27 95       	ror	r18
      c6:	94 2f       	mov	r25, r20
      c8:	95 78       	andi	r25, 0x85	; 133
      ca:	29 2b       	or	r18, r25
      cc:	24 60       	ori	r18, 0x04	; 4
      ce:	2b bb       	out	0x1b, r18	; 27
      d0:	e3 ed       	ldi	r30, 0xD3	; 211
      d2:	f0 e3       	ldi	r31, 0x30	; 48
      d4:	31 97       	sbiw	r30, 0x01	; 1
      d6:	f1 f7       	brne	.-4      	; 0xd4 <LCD_WRITE_COMMAND+0x1c>
      d8:	00 c0       	rjmp	.+0      	; 0xda <LCD_WRITE_COMMAND+0x22>
      da:	00 00       	nop
      dc:	9b b3       	in	r25, 0x1b	; 27
      de:	9b 7f       	andi	r25, 0xFB	; 251
      e0:	9b bb       	out	0x1b, r25	; 27
      e2:	ef e4       	ldi	r30, 0x4F	; 79
      e4:	f3 ec       	ldi	r31, 0xC3	; 195
      e6:	31 97       	sbiw	r30, 0x01	; 1
      e8:	f1 f7       	brne	.-4      	; 0xe6 <LCD_WRITE_COMMAND+0x2e>
      ea:	00 c0       	rjmp	.+0      	; 0xec <LCD_WRITE_COMMAND+0x34>
      ec:	00 00       	nop
      ee:	2b b3       	in	r18, 0x1b	; 27
      f0:	8f 70       	andi	r24, 0x0F	; 15
      f2:	90 e0       	ldi	r25, 0x00	; 0
      f4:	88 0f       	add	r24, r24
      f6:	99 1f       	adc	r25, r25
      f8:	88 0f       	add	r24, r24
      fa:	99 1f       	adc	r25, r25
      fc:	88 0f       	add	r24, r24
      fe:	99 1f       	adc	r25, r25
     100:	92 2f       	mov	r25, r18
     102:	95 78       	andi	r25, 0x85	; 133
     104:	89 2b       	or	r24, r25
     106:	84 60       	ori	r24, 0x04	; 4
     108:	8b bb       	out	0x1b, r24	; 27
     10a:	83 ed       	ldi	r24, 0xD3	; 211
     10c:	90 e3       	ldi	r25, 0x30	; 48
     10e:	01 97       	sbiw	r24, 0x01	; 1
     110:	f1 f7       	brne	.-4      	; 0x10e <LCD_WRITE_COMMAND+0x56>
     112:	00 c0       	rjmp	.+0      	; 0x114 <LCD_WRITE_COMMAND+0x5c>
     114:	00 00       	nop
     116:	8b b3       	in	r24, 0x1b	; 27
     118:	8b 7f       	andi	r24, 0xFB	; 251
     11a:	8b bb       	out	0x1b, r24	; 27
     11c:	ef e4       	ldi	r30, 0x4F	; 79
     11e:	f3 ec       	ldi	r31, 0xC3	; 195
     120:	31 97       	sbiw	r30, 0x01	; 1
     122:	f1 f7       	brne	.-4      	; 0x120 <LCD_WRITE_COMMAND+0x68>
     124:	00 c0       	rjmp	.+0      	; 0x126 <LCD_WRITE_COMMAND+0x6e>
     126:	00 00       	nop
     128:	08 95       	ret

0000012a <LCD_INIT>:
     12a:	87 e8       	ldi	r24, 0x87	; 135
     12c:	93 e1       	ldi	r25, 0x13	; 19
     12e:	01 97       	sbiw	r24, 0x01	; 1
     130:	f1 f7       	brne	.-4      	; 0x12e <LCD_INIT+0x4>
     132:	00 c0       	rjmp	.+0      	; 0x134 <LCD_INIT+0xa>
     134:	00 00       	nop
     136:	8b b3       	in	r24, 0x1b	; 27
     138:	8b 7f       	andi	r24, 0xFB	; 251
     13a:	8b bb       	out	0x1b, r24	; 27
     13c:	82 e0       	ldi	r24, 0x02	; 2
     13e:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_WRITE_COMMAND>
     142:	8c e0       	ldi	r24, 0x0C	; 12
     144:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_WRITE_COMMAND>
     148:	81 e0       	ldi	r24, 0x01	; 1
     14a:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_WRITE_COMMAND>
     14e:	88 e2       	ldi	r24, 0x28	; 40
     150:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_WRITE_COMMAND>
     154:	8f e0       	ldi	r24, 0x0F	; 15
     156:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_WRITE_COMMAND>
     15a:	08 95       	ret

0000015c <GOTO_XY>:
     15c:	90 e4       	ldi	r25, 0x40	; 64
     15e:	69 9f       	mul	r22, r25
     160:	80 0d       	add	r24, r0
     162:	11 24       	eor	r1, r1
     164:	80 58       	subi	r24, 0x80	; 128
     166:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_WRITE_COMMAND>
     16a:	08 95       	ret

0000016c <LCD_WRITE_STRING>:
	}
}


void LCD_WRITE_STRING(char* string){
     16c:	0f 93       	push	r16
     16e:	1f 93       	push	r17
     170:	cf 93       	push	r28
     172:	df 93       	push	r29
     174:	ec 01       	movw	r28, r24
	unsigned char i = 0 , COUNT_STRING = 1 ;
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	00 e0       	ldi	r16, 0x00	; 0
	//CONFIG_DATA_CTRL(OUTPUT,OUTPUT);
	while(string[i]){
     17a:	4f c0       	rjmp	.+158    	; 0x21a <LCD_WRITE_STRING+0xae>
	LCD_CTRL = ((LCD_CTRL & ~LCD_WRITE_DATA) | LCD_WRITE_DATA);
     17c:	2b b3       	in	r18, 0x1b	; 27
     17e:	22 60       	ori	r18, 0x02	; 2
     180:	2b bb       	out	0x1b, r18	; 27
	LCD_DATA = ((LCD_DATA & LCD_INPUT_PINS) | ((string[i] & 0xF0) >> MOST_BIT_PIN));
     182:	90 81       	ld	r25, Z
     184:	90 7f       	andi	r25, 0xF0	; 240
     186:	89 2f       	mov	r24, r25
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	95 95       	asr	r25
     18c:	87 95       	ror	r24
     18e:	27 78       	andi	r18, 0x87	; 135
     190:	82 2b       	or	r24, r18
	LCD_ENABLE;
     192:	84 60       	ori	r24, 0x04	; 4
     194:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     196:	83 ed       	ldi	r24, 0xD3	; 211
     198:	90 e3       	ldi	r25, 0x30	; 48
     19a:	01 97       	sbiw	r24, 0x01	; 1
     19c:	f1 f7       	brne	.-4      	; 0x19a <LCD_WRITE_STRING+0x2e>
     19e:	00 c0       	rjmp	.+0      	; 0x1a0 <LCD_WRITE_STRING+0x34>
     1a0:	00 00       	nop
     1a2:	8b b3       	in	r24, 0x1b	; 27
     1a4:	8b 7f       	andi	r24, 0xFB	; 251
     1a6:	8b bb       	out	0x1b, r24	; 27
     1a8:	8f e4       	ldi	r24, 0x4F	; 79
     1aa:	93 ec       	ldi	r25, 0xC3	; 195
     1ac:	01 97       	sbiw	r24, 0x01	; 1
     1ae:	f1 f7       	brne	.-4      	; 0x1ac <LCD_WRITE_STRING+0x40>
     1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <LCD_WRITE_STRING+0x46>
     1b2:	00 00       	nop
	LCD_CTRL = ((LCD_CTRL & ~LCD_WRITE_DATA) | LCD_WRITE_DATA);
     1b4:	2b b3       	in	r18, 0x1b	; 27
     1b6:	22 60       	ori	r18, 0x02	; 2
     1b8:	2b bb       	out	0x1b, r18	; 27
	LCD_DATA = ((LCD_DATA & LCD_INPUT_PINS) | ((string[i] & 0x0F) << LEAST_BIT_PIN));
     1ba:	90 81       	ld	r25, Z
     1bc:	9f 70       	andi	r25, 0x0F	; 15
     1be:	89 2f       	mov	r24, r25
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	88 0f       	add	r24, r24
     1c4:	99 1f       	adc	r25, r25
     1c6:	88 0f       	add	r24, r24
     1c8:	99 1f       	adc	r25, r25
     1ca:	88 0f       	add	r24, r24
     1cc:	99 1f       	adc	r25, r25
     1ce:	27 78       	andi	r18, 0x87	; 135
     1d0:	82 2b       	or	r24, r18
	LCD_ENABLE;
     1d2:	84 60       	ori	r24, 0x04	; 4
     1d4:	8b bb       	out	0x1b, r24	; 27
     1d6:	83 ed       	ldi	r24, 0xD3	; 211
     1d8:	90 e3       	ldi	r25, 0x30	; 48
     1da:	01 97       	sbiw	r24, 0x01	; 1
     1dc:	f1 f7       	brne	.-4      	; 0x1da <LCD_WRITE_STRING+0x6e>
     1de:	00 c0       	rjmp	.+0      	; 0x1e0 <LCD_WRITE_STRING+0x74>
     1e0:	00 00       	nop
     1e2:	8b b3       	in	r24, 0x1b	; 27
     1e4:	8b 7f       	andi	r24, 0xFB	; 251
     1e6:	8b bb       	out	0x1b, r24	; 27
     1e8:	8f e4       	ldi	r24, 0x4F	; 79
     1ea:	93 ec       	ldi	r25, 0xC3	; 195
     1ec:	01 97       	sbiw	r24, 0x01	; 1
     1ee:	f1 f7       	brne	.-4      	; 0x1ec <LCD_WRITE_STRING+0x80>
     1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <LCD_WRITE_STRING+0x86>
     1f2:	00 00       	nop
    COUNT_STRING++;
     1f4:	1f 5f       	subi	r17, 0xFF	; 255
	if (COUNT_STRING == 16){
     1f6:	10 31       	cpi	r17, 0x10	; 16
     1f8:	29 f4       	brne	.+10     	; 0x204 <LCD_WRITE_STRING+0x98>
		GOTO_XY(0,1);
     1fa:	61 e0       	ldi	r22, 0x01	; 1
     1fc:	80 e0       	ldi	r24, 0x00	; 0
     1fe:	0e 94 ae 00 	call	0x15c	; 0x15c <GOTO_XY>
     202:	0a c0       	rjmp	.+20     	; 0x218 <LCD_WRITE_STRING+0xac>
	}
	else if (COUNT_STRING == 32){
     204:	10 32       	cpi	r17, 0x20	; 32
     206:	41 f4       	brne	.+16     	; 0x218 <LCD_WRITE_STRING+0xac>
		COUNT_STRING = 0;
		LCD_WRITE_COMMAND(LCD_Clear_Display);
     208:	81 e0       	ldi	r24, 0x01	; 1
     20a:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_WRITE_COMMAND>
		GOTO_XY(0,0);
     20e:	60 e0       	ldi	r22, 0x00	; 0
     210:	80 e0       	ldi	r24, 0x00	; 0
     212:	0e 94 ae 00 	call	0x15c	; 0x15c <GOTO_XY>
    COUNT_STRING++;
	if (COUNT_STRING == 16){
		GOTO_XY(0,1);
	}
	else if (COUNT_STRING == 32){
		COUNT_STRING = 0;
     216:	10 e0       	ldi	r17, 0x00	; 0
		LCD_WRITE_COMMAND(LCD_Clear_Display);
		GOTO_XY(0,0);
	}
	i++;
     218:	0f 5f       	subi	r16, 0xFF	; 255


void LCD_WRITE_STRING(char* string){
	unsigned char i = 0 , COUNT_STRING = 1 ;
	//CONFIG_DATA_CTRL(OUTPUT,OUTPUT);
	while(string[i]){
     21a:	fe 01       	movw	r30, r28
     21c:	e0 0f       	add	r30, r16
     21e:	f1 1d       	adc	r31, r1
     220:	80 81       	ld	r24, Z
     222:	81 11       	cpse	r24, r1
     224:	ab cf       	rjmp	.-170    	; 0x17c <LCD_WRITE_STRING+0x10>
		LCD_WRITE_COMMAND(LCD_Clear_Display);
		GOTO_XY(0,0);
	}
	i++;
	}
}
     226:	df 91       	pop	r29
     228:	cf 91       	pop	r28
     22a:	1f 91       	pop	r17
     22c:	0f 91       	pop	r16
     22e:	08 95       	ret

00000230 <LCD_WRITE_NUM>:
}
*/

														//Common functions between two modes

void LCD_WRITE_NUM(int num){
     230:	0f 93       	push	r16
     232:	1f 93       	push	r17
     234:	cf 93       	push	r28
     236:	df 93       	push	r29
     238:	cd b7       	in	r28, 0x3d	; 61
     23a:	de b7       	in	r29, 0x3e	; 62
     23c:	60 97       	sbiw	r28, 0x10	; 16
     23e:	0f b6       	in	r0, 0x3f	; 63
     240:	f8 94       	cli
     242:	de bf       	out	0x3e, r29	; 62
     244:	0f be       	out	0x3f, r0	; 63
     246:	cd bf       	out	0x3d, r28	; 61
	char str[16];
	sprintf(str,"%d",num);	//Convert the number into an array
     248:	9f 93       	push	r25
     24a:	8f 93       	push	r24
     24c:	84 e6       	ldi	r24, 0x64	; 100
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	9f 93       	push	r25
     252:	8f 93       	push	r24
     254:	8e 01       	movw	r16, r28
     256:	0f 5f       	subi	r16, 0xFF	; 255
     258:	1f 4f       	sbci	r17, 0xFF	; 255
     25a:	1f 93       	push	r17
     25c:	0f 93       	push	r16
     25e:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <sprintf>
	LCD_WRITE_STRING(str);	//Pass the array to LCD_WRITE_STRING function to be displayed
     262:	c8 01       	movw	r24, r16
     264:	0e 94 b6 00 	call	0x16c	; 0x16c <LCD_WRITE_STRING>
}
     268:	0f 90       	pop	r0
     26a:	0f 90       	pop	r0
     26c:	0f 90       	pop	r0
     26e:	0f 90       	pop	r0
     270:	0f 90       	pop	r0
     272:	0f 90       	pop	r0
     274:	60 96       	adiw	r28, 0x10	; 16
     276:	0f b6       	in	r0, 0x3f	; 63
     278:	f8 94       	cli
     27a:	de bf       	out	0x3e, r29	; 62
     27c:	0f be       	out	0x3f, r0	; 63
     27e:	cd bf       	out	0x3d, r28	; 61
     280:	df 91       	pop	r29
     282:	cf 91       	pop	r28
     284:	1f 91       	pop	r17
     286:	0f 91       	pop	r16
     288:	08 95       	ret

0000028a <Ultrasonic_Init>:
//		|=============APIs Supported by "MCAL GPIO DRIVER"=================|
//		|------------------------------------------------------------------|


void Ultrasonic_Init()
{
     28a:	1f 93       	push	r17
     28c:	cf 93       	push	r28
     28e:	df 93       	push	r29
     290:	cd b7       	in	r28, 0x3d	; 61
     292:	de b7       	in	r29, 0x3e	; 62
     294:	6c 97       	sbiw	r28, 0x1c	; 28
     296:	0f b6       	in	r0, 0x3f	; 63
     298:	f8 94       	cli
     29a:	de bf       	out	0x3e, r29	; 62
     29c:	0f be       	out	0x3f, r0	; 63
     29e:	cd bf       	out	0x3d, r28	; 61
	TIMER1_CFG_t ultrasonic;
	ultrasonic.TIMNUM = TIMNUM_1;	
     2a0:	11 e0       	ldi	r17, 0x01	; 1
     2a2:	19 83       	std	Y+1, r17	; 0x01
	ultrasonic.ICNC1 = ICNC1_Disable;		
     2a4:	1c 82       	std	Y+4, r1	; 0x04
	ultrasonic.ICES1 = ICES1_RisingEdge;	
     2a6:	80 e4       	ldi	r24, 0x40	; 64
     2a8:	8d 83       	std	Y+5, r24	; 0x05
	ultrasonic.WGM1 = WGM1_Normal;
     2aa:	18 86       	std	Y+8, r1	; 0x08
	ultrasonic.COM1A = 0;
     2ac:	19 86       	std	Y+9, r1	; 0x09
	ultrasonic.COM1B = 0;
     2ae:	1a 86       	std	Y+10, r1	; 0x0a
	ultrasonic.CS1 = CS1_256;
     2b0:	84 e0       	ldi	r24, 0x04	; 4
     2b2:	8b 87       	std	Y+11, r24	; 0x0b
	ultrasonic.TCNT1L = 0;
     2b4:	1c 86       	std	Y+12, r1	; 0x0c
	ultrasonic.TCNT1H = 0;
     2b6:	1d 86       	std	Y+13, r1	; 0x0d
	ultrasonic.OCR1AL = 0;
     2b8:	1e 86       	std	Y+14, r1	; 0x0e
	ultrasonic.OCR1AH = 0;
     2ba:	1f 86       	std	Y+15, r1	; 0x0f
	ultrasonic.OCR1BL = 0;
     2bc:	18 8a       	std	Y+16, r1	; 0x10
	ultrasonic.OCR1BH = 0;		
     2be:	19 8a       	std	Y+17, r1	; 0x11
	ultrasonic.INT1_EN = INT1_EN_Disable;
     2c0:	1a 8a       	std	Y+18, r1	; 0x12
	
	struct GPIO_CFG_t gpiocfg;
	gpiocfg.GPIO_Mode = GPIO_Mode_OUTPUT;
     2c2:	1c 8f       	std	Y+28, r17	; 0x1c
	gpiocfg.GPIO_PinNumber = Trig1;
     2c4:	1b 8e       	std	Y+27, r1	; 0x1b
	MCAL_GPIO_INIT_PIN(US_PORTx ,&gpiocfg );
     2c6:	be 01       	movw	r22, r28
     2c8:	65 5e       	subi	r22, 0xE5	; 229
     2ca:	7f 4f       	sbci	r23, 0xFF	; 255
     2cc:	80 e3       	ldi	r24, 0x30	; 48
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	0e 94 bf 02 	call	0x57e	; 0x57e <MCAL_GPIO_INIT_PIN>
	
	gpiocfg.GPIO_Mode = GPIO_Mode_OUTPUT;
     2d4:	1c 8f       	std	Y+28, r17	; 0x1c
	gpiocfg.GPIO_PinNumber = Trig2;
     2d6:	1b 8f       	std	Y+27, r17	; 0x1b
	MCAL_GPIO_INIT_PIN(US_PORTx ,&gpiocfg );
     2d8:	be 01       	movw	r22, r28
     2da:	65 5e       	subi	r22, 0xE5	; 229
     2dc:	7f 4f       	sbci	r23, 0xFF	; 255
     2de:	80 e3       	ldi	r24, 0x30	; 48
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	0e 94 bf 02 	call	0x57e	; 0x57e <MCAL_GPIO_INIT_PIN>
			
	gpiocfg.GPIO_Mode = GPIO_Mode_OUTPUT;
     2e6:	1c 8f       	std	Y+28, r17	; 0x1c
	gpiocfg.GPIO_PinNumber = Trig3;
     2e8:	82 e0       	ldi	r24, 0x02	; 2
     2ea:	8b 8f       	std	Y+27, r24	; 0x1b
	MCAL_GPIO_INIT_PIN(US_PORTx ,&gpiocfg );
     2ec:	be 01       	movw	r22, r28
     2ee:	65 5e       	subi	r22, 0xE5	; 229
     2f0:	7f 4f       	sbci	r23, 0xFF	; 255
     2f2:	80 e3       	ldi	r24, 0x30	; 48
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	0e 94 bf 02 	call	0x57e	; 0x57e <MCAL_GPIO_INIT_PIN>
				
	gpiocfg.GPIO_Mode = GPIO_Mode_OUTPUT;
     2fa:	1c 8f       	std	Y+28, r17	; 0x1c
	gpiocfg.GPIO_PinNumber = Trig4;
     2fc:	83 e0       	ldi	r24, 0x03	; 3
     2fe:	8b 8f       	std	Y+27, r24	; 0x1b
	MCAL_GPIO_INIT_PIN(US_PORTx ,&gpiocfg );
     300:	be 01       	movw	r22, r28
     302:	65 5e       	subi	r22, 0xE5	; 229
     304:	7f 4f       	sbci	r23, 0xFF	; 255
     306:	80 e3       	ldi	r24, 0x30	; 48
     308:	90 e0       	ldi	r25, 0x00	; 0
     30a:	0e 94 bf 02 	call	0x57e	; 0x57e <MCAL_GPIO_INIT_PIN>
		
	MCAL_TIMER1_INIT(&ultrasonic);
     30e:	ce 01       	movw	r24, r28
     310:	01 96       	adiw	r24, 0x01	; 1
     312:	0e 94 55 03 	call	0x6aa	; 0x6aa <MCAL_TIMER1_INIT>
}
     316:	6c 96       	adiw	r28, 0x1c	; 28
     318:	0f b6       	in	r0, 0x3f	; 63
     31a:	f8 94       	cli
     31c:	de bf       	out	0x3e, r29	; 62
     31e:	0f be       	out	0x3f, r0	; 63
     320:	cd bf       	out	0x3d, r28	; 61
     322:	df 91       	pop	r29
     324:	cf 91       	pop	r28
     326:	1f 91       	pop	r17
     328:	08 95       	ret

0000032a <Ultrasonic_Read>:

uint16_t Ultrasonic_Read(uint8_t UltNum)
{
     32a:	0f 93       	push	r16
     32c:	1f 93       	push	r17
	uint32_t Val1 = 0 , Val2 = 0 , Val = 0;
	float distance = 0;
	if (UltNum == 1)
     32e:	81 30       	cpi	r24, 0x01	; 1
     330:	99 f4       	brne	.+38     	; 0x358 <Ultrasonic_Read+0x2e>
	{
		MCAL_GPIO_WRITE_PIN(US_PORTx , Trig1 , 1);
     332:	41 e0       	ldi	r20, 0x01	; 1
     334:	60 e0       	ldi	r22, 0x00	; 0
     336:	80 e3       	ldi	r24, 0x30	; 48
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	0e 94 15 03 	call	0x62a	; 0x62a <MCAL_GPIO_WRITE_PIN>
     33e:	83 ec       	ldi	r24, 0xC3	; 195
     340:	99 e0       	ldi	r25, 0x09	; 9
     342:	01 97       	sbiw	r24, 0x01	; 1
     344:	f1 f7       	brne	.-4      	; 0x342 <Ultrasonic_Read+0x18>
     346:	00 c0       	rjmp	.+0      	; 0x348 <Ultrasonic_Read+0x1e>
     348:	00 00       	nop
		_delay_ms(10);
		MCAL_GPIO_WRITE_PIN(US_PORTx , Trig1 , 0);		
     34a:	40 e0       	ldi	r20, 0x00	; 0
     34c:	60 e0       	ldi	r22, 0x00	; 0
     34e:	80 e3       	ldi	r24, 0x30	; 48
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	0e 94 15 03 	call	0x62a	; 0x62a <MCAL_GPIO_WRITE_PIN>
     356:	3e c0       	rjmp	.+124    	; 0x3d4 <Ultrasonic_Read+0xaa>
	}
	else if (UltNum == 2)
     358:	82 30       	cpi	r24, 0x02	; 2
     35a:	99 f4       	brne	.+38     	; 0x382 <Ultrasonic_Read+0x58>
	{
		MCAL_GPIO_WRITE_PIN(US_PORTx , Trig2 , 1);
     35c:	41 e0       	ldi	r20, 0x01	; 1
     35e:	61 e0       	ldi	r22, 0x01	; 1
     360:	80 e3       	ldi	r24, 0x30	; 48
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	0e 94 15 03 	call	0x62a	; 0x62a <MCAL_GPIO_WRITE_PIN>
     368:	83 ec       	ldi	r24, 0xC3	; 195
     36a:	99 e0       	ldi	r25, 0x09	; 9
     36c:	01 97       	sbiw	r24, 0x01	; 1
     36e:	f1 f7       	brne	.-4      	; 0x36c <Ultrasonic_Read+0x42>
     370:	00 c0       	rjmp	.+0      	; 0x372 <Ultrasonic_Read+0x48>
     372:	00 00       	nop
		_delay_ms(10);
		MCAL_GPIO_WRITE_PIN(US_PORTx , Trig2 , 0);
     374:	40 e0       	ldi	r20, 0x00	; 0
     376:	61 e0       	ldi	r22, 0x01	; 1
     378:	80 e3       	ldi	r24, 0x30	; 48
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	0e 94 15 03 	call	0x62a	; 0x62a <MCAL_GPIO_WRITE_PIN>
     380:	29 c0       	rjmp	.+82     	; 0x3d4 <Ultrasonic_Read+0xaa>
				
	}
	else if (UltNum == 3)
     382:	83 30       	cpi	r24, 0x03	; 3
     384:	99 f4       	brne	.+38     	; 0x3ac <Ultrasonic_Read+0x82>
	{
		MCAL_GPIO_WRITE_PIN(US_PORTx , Trig3 , 1);
     386:	41 e0       	ldi	r20, 0x01	; 1
     388:	62 e0       	ldi	r22, 0x02	; 2
     38a:	80 e3       	ldi	r24, 0x30	; 48
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	0e 94 15 03 	call	0x62a	; 0x62a <MCAL_GPIO_WRITE_PIN>
     392:	83 ec       	ldi	r24, 0xC3	; 195
     394:	99 e0       	ldi	r25, 0x09	; 9
     396:	01 97       	sbiw	r24, 0x01	; 1
     398:	f1 f7       	brne	.-4      	; 0x396 <Ultrasonic_Read+0x6c>
     39a:	00 c0       	rjmp	.+0      	; 0x39c <Ultrasonic_Read+0x72>
     39c:	00 00       	nop
		_delay_ms(10);
		MCAL_GPIO_WRITE_PIN(US_PORTx , Trig3 , 0);
     39e:	40 e0       	ldi	r20, 0x00	; 0
     3a0:	62 e0       	ldi	r22, 0x02	; 2
     3a2:	80 e3       	ldi	r24, 0x30	; 48
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	0e 94 15 03 	call	0x62a	; 0x62a <MCAL_GPIO_WRITE_PIN>
     3aa:	14 c0       	rjmp	.+40     	; 0x3d4 <Ultrasonic_Read+0xaa>
		
	}
	else if (UltNum == 4)
     3ac:	84 30       	cpi	r24, 0x04	; 4
     3ae:	91 f4       	brne	.+36     	; 0x3d4 <Ultrasonic_Read+0xaa>
	{
		MCAL_GPIO_WRITE_PIN(US_PORTx , Trig4 , 1);
     3b0:	41 e0       	ldi	r20, 0x01	; 1
     3b2:	63 e0       	ldi	r22, 0x03	; 3
     3b4:	80 e3       	ldi	r24, 0x30	; 48
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	0e 94 15 03 	call	0x62a	; 0x62a <MCAL_GPIO_WRITE_PIN>
     3bc:	83 ec       	ldi	r24, 0xC3	; 195
     3be:	99 e0       	ldi	r25, 0x09	; 9
     3c0:	01 97       	sbiw	r24, 0x01	; 1
     3c2:	f1 f7       	brne	.-4      	; 0x3c0 <Ultrasonic_Read+0x96>
     3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <Ultrasonic_Read+0x9c>
     3c6:	00 00       	nop
		_delay_ms(10);
		MCAL_GPIO_WRITE_PIN(US_PORTx , Trig4 , 0);
     3c8:	40 e0       	ldi	r20, 0x00	; 0
     3ca:	63 e0       	ldi	r22, 0x03	; 3
     3cc:	80 e3       	ldi	r24, 0x30	; 48
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	0e 94 15 03 	call	0x62a	; 0x62a <MCAL_GPIO_WRITE_PIN>
			
	}

	
	Timer1->TCNT1H = 0;
     3d4:	1d bc       	out	0x2d, r1	; 45
	Timer1->TCNT1L = 0;
     3d6:	1c bc       	out	0x2c, r1	; 44
	while(!(TIMCOM->TIFR &(1 << 5)));
     3d8:	88 b7       	in	r24, 0x38	; 56
     3da:	85 ff       	sbrs	r24, 5
     3dc:	fd cf       	rjmp	.-6      	; 0x3d8 <Ultrasonic_Read+0xae>
	Val1 |= Timer1->ICR1L;
     3de:	96 b5       	in	r25, 0x26	; 38
	Val1 |= (Timer1->ICR1H << 8);
     3e0:	07 b5       	in	r16, 0x27	; 39
     3e2:	10 e0       	ldi	r17, 0x00	; 0
     3e4:	10 2f       	mov	r17, r16
     3e6:	00 27       	eor	r16, r16
     3e8:	01 2e       	mov	r0, r17
     3ea:	00 0c       	add	r0, r0
     3ec:	22 0b       	sbc	r18, r18
     3ee:	33 0b       	sbc	r19, r19
     3f0:	09 2b       	or	r16, r25
	TIMCOM->TIFR |= (1 << 5);
     3f2:	80 62       	ori	r24, 0x20	; 32
     3f4:	88 bf       	out	0x38, r24	; 56
	Timer1->TCCR1B = (Timer1->TCCR1B & ~(1 << 6)) | ICES1_FallingEdge;
     3f6:	8e b5       	in	r24, 0x2e	; 46
     3f8:	8f 7b       	andi	r24, 0xBF	; 191
     3fa:	8e bd       	out	0x2e, r24	; 46
	while(!(TIMCOM->TIFR &(1 << 5)));
     3fc:	88 b7       	in	r24, 0x38	; 56
     3fe:	85 ff       	sbrs	r24, 5
     400:	fd cf       	rjmp	.-6      	; 0x3fc <Ultrasonic_Read+0xd2>
	
	Val2 |= Timer1->ICR1L;
     402:	96 b5       	in	r25, 0x26	; 38
	Val2 |= (Timer1->ICR1H << 8);
     404:	47 b5       	in	r20, 0x27	; 39
     406:	50 e0       	ldi	r21, 0x00	; 0
     408:	54 2f       	mov	r21, r20
     40a:	44 27       	eor	r20, r20
     40c:	05 2e       	mov	r0, r21
     40e:	00 0c       	add	r0, r0
     410:	66 0b       	sbc	r22, r22
     412:	77 0b       	sbc	r23, r23
     414:	49 2b       	or	r20, r25
	TIMCOM->TIFR |= (1 << 5);
     416:	80 62       	ori	r24, 0x20	; 32
     418:	88 bf       	out	0x38, r24	; 56
	
	Val = Val2 - Val1;
     41a:	cb 01       	movw	r24, r22
     41c:	ba 01       	movw	r22, r20
     41e:	60 1b       	sub	r22, r16
     420:	71 0b       	sbc	r23, r17
     422:	82 0b       	sbc	r24, r18
     424:	93 0b       	sbc	r25, r19
	
	distance = ((((float)Val/62500) * 343) / (float)2 ) * 100 ;
     426:	0e 94 89 05 	call	0xb12	; 0xb12 <__floatunsisf>
     42a:	20 e0       	ldi	r18, 0x00	; 0
     42c:	34 e2       	ldi	r19, 0x24	; 36
     42e:	44 e7       	ldi	r20, 0x74	; 116
     430:	57 e4       	ldi	r21, 0x47	; 71
     432:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__divsf3>
     436:	20 e0       	ldi	r18, 0x00	; 0
     438:	30 e8       	ldi	r19, 0x80	; 128
     43a:	4b ea       	ldi	r20, 0xAB	; 171
     43c:	53 e4       	ldi	r21, 0x43	; 67
     43e:	0e 94 17 06 	call	0xc2e	; 0xc2e <__mulsf3>
     442:	20 e0       	ldi	r18, 0x00	; 0
     444:	30 e0       	ldi	r19, 0x00	; 0
     446:	40 e0       	ldi	r20, 0x00	; 0
     448:	5f e3       	ldi	r21, 0x3F	; 63
     44a:	0e 94 17 06 	call	0xc2e	; 0xc2e <__mulsf3>
     44e:	20 e0       	ldi	r18, 0x00	; 0
     450:	30 e0       	ldi	r19, 0x00	; 0
     452:	48 ec       	ldi	r20, 0xC8	; 200
     454:	52 e4       	ldi	r21, 0x42	; 66
     456:	0e 94 17 06 	call	0xc2e	; 0xc2e <__mulsf3>
	
	Timer1->TCCR1B = (Timer1->TCCR1B & ~(1 << 6)) | ICES1_RisingEdge;
     45a:	2e b5       	in	r18, 0x2e	; 46
     45c:	20 64       	ori	r18, 0x40	; 64
     45e:	2e bd       	out	0x2e, r18	; 46
	return distance;	
     460:	0e 94 5a 05 	call	0xab4	; 0xab4 <__fixunssfsi>
     464:	cb 01       	movw	r24, r22
     466:	1f 91       	pop	r17
     468:	0f 91       	pop	r16
     46a:	08 95       	ret

0000046c <LCDInit>:
		comp_action = 'E';
		compass_direction_to_usual_direction(comp_action , new_north);
	}	
}
void LCDInit()
{
     46c:	1f 93       	push	r17
     46e:	cf 93       	push	r28
     470:	df 93       	push	r29
     472:	00 d0       	rcall	.+0      	; 0x474 <LCDInit+0x8>
     474:	cd b7       	in	r28, 0x3d	; 61
     476:	de b7       	in	r29, 0x3e	; 62
	struct GPIO_CFG_t gpiocfg;
	gpiocfg.GPIO_PinNumber = GPIO_PinNumber_1;
     478:	11 e0       	ldi	r17, 0x01	; 1
     47a:	19 83       	std	Y+1, r17	; 0x01
	gpiocfg.GPIO_Mode = GPIO_Mode_OUTPUT;
     47c:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_INIT_PIN(PORTA , &gpiocfg);
     47e:	be 01       	movw	r22, r28
     480:	6f 5f       	subi	r22, 0xFF	; 255
     482:	7f 4f       	sbci	r23, 0xFF	; 255
     484:	89 e3       	ldi	r24, 0x39	; 57
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	0e 94 bf 02 	call	0x57e	; 0x57e <MCAL_GPIO_INIT_PIN>

	gpiocfg.GPIO_PinNumber = GPIO_PinNumber_2;
     48c:	82 e0       	ldi	r24, 0x02	; 2
     48e:	89 83       	std	Y+1, r24	; 0x01
	gpiocfg.GPIO_Mode = GPIO_Mode_OUTPUT;
     490:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_INIT_PIN(PORTA , &gpiocfg);
     492:	be 01       	movw	r22, r28
     494:	6f 5f       	subi	r22, 0xFF	; 255
     496:	7f 4f       	sbci	r23, 0xFF	; 255
     498:	89 e3       	ldi	r24, 0x39	; 57
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	0e 94 bf 02 	call	0x57e	; 0x57e <MCAL_GPIO_INIT_PIN>

	gpiocfg.GPIO_PinNumber = GPIO_PinNumber_3;
     4a0:	83 e0       	ldi	r24, 0x03	; 3
     4a2:	89 83       	std	Y+1, r24	; 0x01
	gpiocfg.GPIO_Mode = GPIO_Mode_OUTPUT;
     4a4:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_INIT_PIN(PORTA , &gpiocfg);
     4a6:	be 01       	movw	r22, r28
     4a8:	6f 5f       	subi	r22, 0xFF	; 255
     4aa:	7f 4f       	sbci	r23, 0xFF	; 255
     4ac:	89 e3       	ldi	r24, 0x39	; 57
     4ae:	90 e0       	ldi	r25, 0x00	; 0
     4b0:	0e 94 bf 02 	call	0x57e	; 0x57e <MCAL_GPIO_INIT_PIN>
	
	gpiocfg.GPIO_PinNumber = GPIO_PinNumber_4;
     4b4:	84 e0       	ldi	r24, 0x04	; 4
     4b6:	89 83       	std	Y+1, r24	; 0x01
	gpiocfg.GPIO_Mode = GPIO_Mode_OUTPUT;
     4b8:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_INIT_PIN(PORTA , &gpiocfg);
     4ba:	be 01       	movw	r22, r28
     4bc:	6f 5f       	subi	r22, 0xFF	; 255
     4be:	7f 4f       	sbci	r23, 0xFF	; 255
     4c0:	89 e3       	ldi	r24, 0x39	; 57
     4c2:	90 e0       	ldi	r25, 0x00	; 0
     4c4:	0e 94 bf 02 	call	0x57e	; 0x57e <MCAL_GPIO_INIT_PIN>

	gpiocfg.GPIO_PinNumber = GPIO_PinNumber_5;
     4c8:	85 e0       	ldi	r24, 0x05	; 5
     4ca:	89 83       	std	Y+1, r24	; 0x01
	gpiocfg.GPIO_Mode = GPIO_Mode_OUTPUT;
     4cc:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_INIT_PIN(PORTA , &gpiocfg);
     4ce:	be 01       	movw	r22, r28
     4d0:	6f 5f       	subi	r22, 0xFF	; 255
     4d2:	7f 4f       	sbci	r23, 0xFF	; 255
     4d4:	89 e3       	ldi	r24, 0x39	; 57
     4d6:	90 e0       	ldi	r25, 0x00	; 0
     4d8:	0e 94 bf 02 	call	0x57e	; 0x57e <MCAL_GPIO_INIT_PIN>

	gpiocfg.GPIO_PinNumber = GPIO_PinNumber_6;
     4dc:	86 e0       	ldi	r24, 0x06	; 6
     4de:	89 83       	std	Y+1, r24	; 0x01
	gpiocfg.GPIO_Mode = GPIO_Mode_OUTPUT;
     4e0:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_INIT_PIN(PORTA , &gpiocfg);
     4e2:	be 01       	movw	r22, r28
     4e4:	6f 5f       	subi	r22, 0xFF	; 255
     4e6:	7f 4f       	sbci	r23, 0xFF	; 255
     4e8:	89 e3       	ldi	r24, 0x39	; 57
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	0e 94 bf 02 	call	0x57e	; 0x57e <MCAL_GPIO_INIT_PIN>
	
	LCD_INIT();
     4f0:	0e 94 95 00 	call	0x12a	; 0x12a <LCD_INIT>
}
     4f4:	0f 90       	pop	r0
     4f6:	0f 90       	pop	r0
     4f8:	df 91       	pop	r29
     4fa:	cf 91       	pop	r28
     4fc:	1f 91       	pop	r17
     4fe:	08 95       	ret

00000500 <main>:
uint8_t deadend();


int main(void)
{
	srand(time(NULL));
     500:	80 e0       	ldi	r24, 0x00	; 0
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	0e 94 49 00 	call	0x92	; 0x92 <time>
     508:	cb 01       	movw	r24, r22
     50a:	0e 94 d5 06 	call	0xdaa	; 0xdaa <srand>
	LCDInit();
     50e:	0e 94 36 02 	call	0x46c	; 0x46c <LCDInit>

//	DC_Motors_Init();
    Ultrasonic_Init();
     512:	0e 94 45 01 	call	0x28a	; 0x28a <Ultrasonic_Init>
// // 		  Car_MoveTo_Forward();
// // 		  _delay_ms(100000);
// // 		  Car_MoveTo_Backward();


LCD_WRITE_NUM( Ultrasonic_Read(1));
     516:	81 e0       	ldi	r24, 0x01	; 1
     518:	0e 94 95 01 	call	0x32a	; 0x32a <Ultrasonic_Read>
     51c:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WRITE_NUM>
     520:	2f ef       	ldi	r18, 0xFF	; 255
     522:	88 e0       	ldi	r24, 0x08	; 8
     524:	9d e3       	ldi	r25, 0x3D	; 61
     526:	21 50       	subi	r18, 0x01	; 1
     528:	80 40       	sbci	r24, 0x00	; 0
     52a:	90 40       	sbci	r25, 0x00	; 0
     52c:	e1 f7       	brne	.-8      	; 0x526 <main+0x26>
     52e:	00 c0       	rjmp	.+0      	; 0x530 <main+0x30>
     530:	00 00       	nop
_delay_ms(20000);
LCD_WRITE_COMMAND(LCD_Clear_Display);
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_WRITE_COMMAND>

LCD_WRITE_NUM(Ultrasonic_Read(2));
     538:	82 e0       	ldi	r24, 0x02	; 2
     53a:	0e 94 95 01 	call	0x32a	; 0x32a <Ultrasonic_Read>
     53e:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WRITE_NUM>
     542:	2f ef       	ldi	r18, 0xFF	; 255
     544:	88 e0       	ldi	r24, 0x08	; 8
     546:	9d e3       	ldi	r25, 0x3D	; 61
     548:	21 50       	subi	r18, 0x01	; 1
     54a:	80 40       	sbci	r24, 0x00	; 0
     54c:	90 40       	sbci	r25, 0x00	; 0
     54e:	e1 f7       	brne	.-8      	; 0x548 <main+0x48>
     550:	00 c0       	rjmp	.+0      	; 0x552 <main+0x52>
     552:	00 00       	nop
_delay_ms(20000);
LCD_WRITE_COMMAND(LCD_Clear_Display);
     554:	81 e0       	ldi	r24, 0x01	; 1
     556:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_WRITE_COMMAND>

LCD_WRITE_NUM(Ultrasonic_Read(3));
     55a:	83 e0       	ldi	r24, 0x03	; 3
     55c:	0e 94 95 01 	call	0x32a	; 0x32a <Ultrasonic_Read>
     560:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WRITE_NUM>
     564:	2f ef       	ldi	r18, 0xFF	; 255
     566:	88 e0       	ldi	r24, 0x08	; 8
     568:	9d e3       	ldi	r25, 0x3D	; 61
     56a:	21 50       	subi	r18, 0x01	; 1
     56c:	80 40       	sbci	r24, 0x00	; 0
     56e:	90 40       	sbci	r25, 0x00	; 0
     570:	e1 f7       	brne	.-8      	; 0x56a <main+0x6a>
     572:	00 c0       	rjmp	.+0      	; 0x574 <main+0x74>
     574:	00 00       	nop
_delay_ms(20000);
LCD_WRITE_COMMAND(LCD_Clear_Display);
     576:	81 e0       	ldi	r24, 0x01	; 1
     578:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_WRITE_COMMAND>
     57c:	cc cf       	rjmp	.-104    	; 0x516 <main+0x16>

0000057e <MCAL_GPIO_INIT_PIN>:
	return (PORTx->PIN >> PIN_NUMBER & 1);
}

unsigned char MCAL_GPIO_READ_PORT(struct GPIO_t * PORTx){
	return PORTx->PIN;
}
     57e:	fc 01       	movw	r30, r24
     580:	db 01       	movw	r26, r22
     582:	11 96       	adiw	r26, 0x01	; 1
     584:	2c 91       	ld	r18, X
     586:	11 97       	sbiw	r26, 0x01	; 1
     588:	21 11       	cpse	r18, r1
     58a:	20 c0       	rjmp	.+64     	; 0x5cc <MCAL_GPIO_INIT_PIN+0x4e>
     58c:	41 81       	ldd	r20, Z+1	; 0x01
     58e:	5c 91       	ld	r21, X
     590:	81 e0       	ldi	r24, 0x01	; 1
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	bc 01       	movw	r22, r24
     596:	05 2e       	mov	r0, r21
     598:	02 c0       	rjmp	.+4      	; 0x59e <MCAL_GPIO_INIT_PIN+0x20>
     59a:	66 0f       	add	r22, r22
     59c:	77 1f       	adc	r23, r23
     59e:	0a 94       	dec	r0
     5a0:	e2 f7       	brpl	.-8      	; 0x59a <MCAL_GPIO_INIT_PIN+0x1c>
     5a2:	30 e0       	ldi	r19, 0x00	; 0
     5a4:	02 c0       	rjmp	.+4      	; 0x5aa <MCAL_GPIO_INIT_PIN+0x2c>
     5a6:	22 0f       	add	r18, r18
     5a8:	33 1f       	adc	r19, r19
     5aa:	5a 95       	dec	r21
     5ac:	e2 f7       	brpl	.-8      	; 0x5a6 <MCAL_GPIO_INIT_PIN+0x28>
     5ae:	36 2f       	mov	r19, r22
     5b0:	30 95       	com	r19
     5b2:	34 23       	and	r19, r20
     5b4:	23 2b       	or	r18, r19
     5b6:	21 83       	std	Z+1, r18	; 0x01
     5b8:	0c 90       	ld	r0, X
     5ba:	02 c0       	rjmp	.+4      	; 0x5c0 <MCAL_GPIO_INIT_PIN+0x42>
     5bc:	88 0f       	add	r24, r24
     5be:	99 1f       	adc	r25, r25
     5c0:	0a 94       	dec	r0
     5c2:	e2 f7       	brpl	.-8      	; 0x5bc <MCAL_GPIO_INIT_PIN+0x3e>
     5c4:	92 81       	ldd	r25, Z+2	; 0x02
     5c6:	89 23       	and	r24, r25
     5c8:	82 83       	std	Z+2, r24	; 0x02
     5ca:	08 95       	ret
     5cc:	22 30       	cpi	r18, 0x02	; 2
     5ce:	c1 f4       	brne	.+48     	; 0x600 <MCAL_GPIO_INIT_PIN+0x82>
     5d0:	81 e0       	ldi	r24, 0x01	; 1
     5d2:	90 e0       	ldi	r25, 0x00	; 0
     5d4:	9c 01       	movw	r18, r24
     5d6:	0c 90       	ld	r0, X
     5d8:	02 c0       	rjmp	.+4      	; 0x5de <MCAL_GPIO_INIT_PIN+0x60>
     5da:	22 0f       	add	r18, r18
     5dc:	33 1f       	adc	r19, r19
     5de:	0a 94       	dec	r0
     5e0:	e2 f7       	brpl	.-8      	; 0x5da <MCAL_GPIO_INIT_PIN+0x5c>
     5e2:	20 95       	com	r18
     5e4:	31 81       	ldd	r19, Z+1	; 0x01
     5e6:	23 23       	and	r18, r19
     5e8:	21 83       	std	Z+1, r18	; 0x01
     5ea:	0c 90       	ld	r0, X
     5ec:	02 c0       	rjmp	.+4      	; 0x5f2 <MCAL_GPIO_INIT_PIN+0x74>
     5ee:	88 0f       	add	r24, r24
     5f0:	99 1f       	adc	r25, r25
     5f2:	0a 94       	dec	r0
     5f4:	e2 f7       	brpl	.-8      	; 0x5ee <MCAL_GPIO_INIT_PIN+0x70>
     5f6:	80 95       	com	r24
     5f8:	92 81       	ldd	r25, Z+2	; 0x02
     5fa:	89 23       	and	r24, r25
     5fc:	82 83       	std	Z+2, r24	; 0x02
     5fe:	08 95       	ret
     600:	41 81       	ldd	r20, Z+1	; 0x01
     602:	5c 91       	ld	r21, X
     604:	81 e0       	ldi	r24, 0x01	; 1
     606:	90 e0       	ldi	r25, 0x00	; 0
     608:	05 2e       	mov	r0, r21
     60a:	02 c0       	rjmp	.+4      	; 0x610 <MCAL_GPIO_INIT_PIN+0x92>
     60c:	88 0f       	add	r24, r24
     60e:	99 1f       	adc	r25, r25
     610:	0a 94       	dec	r0
     612:	e2 f7       	brpl	.-8      	; 0x60c <MCAL_GPIO_INIT_PIN+0x8e>
     614:	30 e0       	ldi	r19, 0x00	; 0
     616:	02 c0       	rjmp	.+4      	; 0x61c <MCAL_GPIO_INIT_PIN+0x9e>
     618:	22 0f       	add	r18, r18
     61a:	33 1f       	adc	r19, r19
     61c:	5a 95       	dec	r21
     61e:	e2 f7       	brpl	.-8      	; 0x618 <MCAL_GPIO_INIT_PIN+0x9a>
     620:	80 95       	com	r24
     622:	84 23       	and	r24, r20
     624:	28 2b       	or	r18, r24
     626:	21 83       	std	Z+1, r18	; 0x01
     628:	08 95       	ret

0000062a <MCAL_GPIO_WRITE_PIN>:


void MCAL_GPIO_WRITE_PIN(struct GPIO_t * PORTx , unsigned char PIN_NUMBER , unsigned char VAL){
     62a:	fc 01       	movw	r30, r24
	PORTx->PORT = (PORTx->PORT & ~(1 << PIN_NUMBER)) | (VAL << PIN_NUMBER);
     62c:	92 81       	ldd	r25, Z+2	; 0x02
     62e:	21 e0       	ldi	r18, 0x01	; 1
     630:	30 e0       	ldi	r19, 0x00	; 0
     632:	06 2e       	mov	r0, r22
     634:	02 c0       	rjmp	.+4      	; 0x63a <MCAL_GPIO_WRITE_PIN+0x10>
     636:	22 0f       	add	r18, r18
     638:	33 1f       	adc	r19, r19
     63a:	0a 94       	dec	r0
     63c:	e2 f7       	brpl	.-8      	; 0x636 <MCAL_GPIO_WRITE_PIN+0xc>
     63e:	50 e0       	ldi	r21, 0x00	; 0
     640:	02 c0       	rjmp	.+4      	; 0x646 <MCAL_GPIO_WRITE_PIN+0x1c>
     642:	44 0f       	add	r20, r20
     644:	55 1f       	adc	r21, r21
     646:	6a 95       	dec	r22
     648:	e2 f7       	brpl	.-8      	; 0x642 <MCAL_GPIO_WRITE_PIN+0x18>
     64a:	20 95       	com	r18
     64c:	29 23       	and	r18, r25
     64e:	42 2b       	or	r20, r18
     650:	42 83       	std	Z+2, r20	; 0x02
     652:	08 95       	ret

00000654 <MCAL_TIMER1_GPIO_SetPINS>:
	
	Timer2->OCR2 = timcfg->OCR2;
	
	Timer2->ASSR = (Timer2->ASSR & ~(1 << 3)) | timcfg->AS2;
	
	MCAL_TIMER2_GPIO_SetPINS();
     654:	1f 93       	push	r17
     656:	cf 93       	push	r28
     658:	df 93       	push	r29
     65a:	00 d0       	rcall	.+0      	; 0x65c <MCAL_TIMER1_GPIO_SetPINS+0x8>
     65c:	cd b7       	in	r28, 0x3d	; 61
     65e:	de b7       	in	r29, 0x3e	; 62
     660:	11 e0       	ldi	r17, 0x01	; 1
     662:	1a 83       	std	Y+2, r17	; 0x02
     664:	85 e0       	ldi	r24, 0x05	; 5
     666:	89 83       	std	Y+1, r24	; 0x01
     668:	be 01       	movw	r22, r28
     66a:	6f 5f       	subi	r22, 0xFF	; 255
     66c:	7f 4f       	sbci	r23, 0xFF	; 255
     66e:	80 e3       	ldi	r24, 0x30	; 48
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	0e 94 bf 02 	call	0x57e	; 0x57e <MCAL_GPIO_INIT_PIN>
     676:	1a 83       	std	Y+2, r17	; 0x02
     678:	84 e0       	ldi	r24, 0x04	; 4
     67a:	89 83       	std	Y+1, r24	; 0x01
     67c:	be 01       	movw	r22, r28
     67e:	6f 5f       	subi	r22, 0xFF	; 255
     680:	7f 4f       	sbci	r23, 0xFF	; 255
     682:	80 e3       	ldi	r24, 0x30	; 48
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	0e 94 bf 02 	call	0x57e	; 0x57e <MCAL_GPIO_INIT_PIN>
     68a:	1a 82       	std	Y+2, r1	; 0x02
     68c:	86 e0       	ldi	r24, 0x06	; 6
     68e:	89 83       	std	Y+1, r24	; 0x01
     690:	be 01       	movw	r22, r28
     692:	6f 5f       	subi	r22, 0xFF	; 255
     694:	7f 4f       	sbci	r23, 0xFF	; 255
     696:	80 e3       	ldi	r24, 0x30	; 48
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	0e 94 bf 02 	call	0x57e	; 0x57e <MCAL_GPIO_INIT_PIN>
     69e:	0f 90       	pop	r0
     6a0:	0f 90       	pop	r0
     6a2:	df 91       	pop	r29
     6a4:	cf 91       	pop	r28
     6a6:	1f 91       	pop	r17
     6a8:	08 95       	ret

000006aa <MCAL_TIMER1_INIT>:
     6aa:	fc 01       	movw	r30, r24
     6ac:	81 89       	ldd	r24, Z+17	; 0x11
     6ae:	88 23       	and	r24, r24
     6b0:	f1 f0       	breq	.+60     	; 0x6ee <MCAL_TIMER1_INIT+0x44>
     6b2:	8f b7       	in	r24, 0x3f	; 63
     6b4:	80 68       	ori	r24, 0x80	; 128
     6b6:	8f bf       	out	0x3f, r24	; 63
     6b8:	82 89       	ldd	r24, Z+18	; 0x12
     6ba:	93 89       	ldd	r25, Z+19	; 0x13
     6bc:	90 93 7d 00 	sts	0x007D, r25	; 0x80007d <GP_TICIE1_InputCapture+0x1>
     6c0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <GP_TICIE1_InputCapture>
     6c4:	24 89       	ldd	r18, Z+20	; 0x14
     6c6:	35 89       	ldd	r19, Z+21	; 0x15
     6c8:	30 93 85 00 	sts	0x0085, r19	; 0x800085 <GP_OCIE1A_Compare_MatchA+0x1>
     6cc:	20 93 84 00 	sts	0x0084, r18	; 0x800084 <GP_OCIE1A_Compare_MatchA>
     6d0:	90 93 7f 00 	sts	0x007F, r25	; 0x80007f <GP_TOIE1_OverFlow+0x1>
     6d4:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <GP_TOIE1_OverFlow>
     6d8:	86 89       	ldd	r24, Z+22	; 0x16
     6da:	97 89       	ldd	r25, Z+23	; 0x17
     6dc:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <GP_OCIE1B_Compare_MatchB+0x1>
     6e0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <GP_OCIE1B_Compare_MatchB>
     6e4:	89 b7       	in	r24, 0x39	; 57
     6e6:	91 89       	ldd	r25, Z+17	; 0x11
     6e8:	83 7c       	andi	r24, 0xC3	; 195
     6ea:	89 2b       	or	r24, r25
     6ec:	89 bf       	out	0x39, r24	; 57
     6ee:	3f b5       	in	r19, 0x2f	; 47
     6f0:	80 85       	ldd	r24, Z+8	; 0x08
     6f2:	3f 73       	andi	r19, 0x3F	; 63
     6f4:	38 2b       	or	r19, r24
     6f6:	3f bd       	out	0x2f, r19	; 47
     6f8:	81 85       	ldd	r24, Z+9	; 0x09
     6fa:	3f 7c       	andi	r19, 0xCF	; 207
     6fc:	38 2b       	or	r19, r24
     6fe:	3f bd       	out	0x2f, r19	; 47
     700:	2e b5       	in	r18, 0x2e	; 46
     702:	83 81       	ldd	r24, Z+3	; 0x03
     704:	2f 77       	andi	r18, 0x7F	; 127
     706:	28 2b       	or	r18, r24
     708:	2e bd       	out	0x2e, r18	; 46
     70a:	94 81       	ldd	r25, Z+4	; 0x04
     70c:	2f 7b       	andi	r18, 0xBF	; 191
     70e:	29 2b       	or	r18, r25
     710:	2e bd       	out	0x2e, r18	; 46
     712:	92 85       	ldd	r25, Z+10	; 0x0a
     714:	28 7f       	andi	r18, 0xF8	; 248
     716:	29 2b       	or	r18, r25
     718:	2e bd       	out	0x2e, r18	; 46
     71a:	84 85       	ldd	r24, Z+12	; 0x0c
     71c:	8d bd       	out	0x2d, r24	; 45
     71e:	83 85       	ldd	r24, Z+11	; 0x0b
     720:	8c bd       	out	0x2c, r24	; 44
     722:	86 85       	ldd	r24, Z+14	; 0x0e
     724:	8b bd       	out	0x2b, r24	; 43
     726:	85 85       	ldd	r24, Z+13	; 0x0d
     728:	8a bd       	out	0x2a, r24	; 42
     72a:	80 89       	ldd	r24, Z+16	; 0x10
     72c:	89 bd       	out	0x29, r24	; 41
     72e:	87 85       	ldd	r24, Z+15	; 0x0f
     730:	88 bd       	out	0x28, r24	; 40
     732:	87 81       	ldd	r24, Z+7	; 0x07
     734:	3c 7f       	andi	r19, 0xFC	; 252
     736:	83 70       	andi	r24, 0x03	; 3
     738:	38 2b       	or	r19, r24
     73a:	3f bd       	out	0x2f, r19	; 47
     73c:	97 81       	ldd	r25, Z+7	; 0x07
     73e:	96 95       	lsr	r25
     740:	96 95       	lsr	r25
     742:	93 70       	andi	r25, 0x03	; 3
     744:	89 2f       	mov	r24, r25
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	88 0f       	add	r24, r24
     74a:	99 1f       	adc	r25, r25
     74c:	88 0f       	add	r24, r24
     74e:	99 1f       	adc	r25, r25
     750:	88 0f       	add	r24, r24
     752:	99 1f       	adc	r25, r25
     754:	27 7e       	andi	r18, 0xE7	; 231
     756:	82 2b       	or	r24, r18
     758:	8e bd       	out	0x2e, r24	; 46
     75a:	0e 94 2a 03 	call	0x654	; 0x654 <MCAL_TIMER1_GPIO_SetPINS>
     75e:	08 95       	ret

00000760 <__vector_11>:
//			 |\_______________________________________/|


void __vector_11 (void) __attribute__((signal));
void __vector_11 (void)
{
     760:	1f 92       	push	r1
     762:	0f 92       	push	r0
     764:	0f b6       	in	r0, 0x3f	; 63
     766:	0f 92       	push	r0
     768:	11 24       	eor	r1, r1
     76a:	2f 93       	push	r18
     76c:	3f 93       	push	r19
     76e:	4f 93       	push	r20
     770:	5f 93       	push	r21
     772:	6f 93       	push	r22
     774:	7f 93       	push	r23
     776:	8f 93       	push	r24
     778:	9f 93       	push	r25
     77a:	af 93       	push	r26
     77c:	bf 93       	push	r27
     77e:	ef 93       	push	r30
     780:	ff 93       	push	r31
	GP_TIMER0_OverFlow();
     782:	e0 91 78 00 	lds	r30, 0x0078	; 0x800078 <GP_TIMER0_OverFlow>
     786:	f0 91 79 00 	lds	r31, 0x0079	; 0x800079 <GP_TIMER0_OverFlow+0x1>
     78a:	09 95       	icall
}
     78c:	ff 91       	pop	r31
     78e:	ef 91       	pop	r30
     790:	bf 91       	pop	r27
     792:	af 91       	pop	r26
     794:	9f 91       	pop	r25
     796:	8f 91       	pop	r24
     798:	7f 91       	pop	r23
     79a:	6f 91       	pop	r22
     79c:	5f 91       	pop	r21
     79e:	4f 91       	pop	r20
     7a0:	3f 91       	pop	r19
     7a2:	2f 91       	pop	r18
     7a4:	0f 90       	pop	r0
     7a6:	0f be       	out	0x3f, r0	; 63
     7a8:	0f 90       	pop	r0
     7aa:	1f 90       	pop	r1
     7ac:	18 95       	reti

000007ae <__vector_10>:


void __vector_10 (void) __attribute__((signal));
void __vector_10 (void)
{
     7ae:	1f 92       	push	r1
     7b0:	0f 92       	push	r0
     7b2:	0f b6       	in	r0, 0x3f	; 63
     7b4:	0f 92       	push	r0
     7b6:	11 24       	eor	r1, r1
     7b8:	2f 93       	push	r18
     7ba:	3f 93       	push	r19
     7bc:	4f 93       	push	r20
     7be:	5f 93       	push	r21
     7c0:	6f 93       	push	r22
     7c2:	7f 93       	push	r23
     7c4:	8f 93       	push	r24
     7c6:	9f 93       	push	r25
     7c8:	af 93       	push	r26
     7ca:	bf 93       	push	r27
     7cc:	ef 93       	push	r30
     7ce:	ff 93       	push	r31
	GP_TIMER0_Compare_Match();
     7d0:	e0 91 82 00 	lds	r30, 0x0082	; 0x800082 <GP_TIMER0_Compare_Match>
     7d4:	f0 91 83 00 	lds	r31, 0x0083	; 0x800083 <GP_TIMER0_Compare_Match+0x1>
     7d8:	09 95       	icall
}
     7da:	ff 91       	pop	r31
     7dc:	ef 91       	pop	r30
     7de:	bf 91       	pop	r27
     7e0:	af 91       	pop	r26
     7e2:	9f 91       	pop	r25
     7e4:	8f 91       	pop	r24
     7e6:	7f 91       	pop	r23
     7e8:	6f 91       	pop	r22
     7ea:	5f 91       	pop	r21
     7ec:	4f 91       	pop	r20
     7ee:	3f 91       	pop	r19
     7f0:	2f 91       	pop	r18
     7f2:	0f 90       	pop	r0
     7f4:	0f be       	out	0x3f, r0	; 63
     7f6:	0f 90       	pop	r0
     7f8:	1f 90       	pop	r1
     7fa:	18 95       	reti

000007fc <__vector_5>:
//			 |\__________		Timer 2		__________/|
//			 |\_______________________________________/|

void __vector_5 (void) __attribute__((signal));
void __vector_5 (void)
{
     7fc:	1f 92       	push	r1
     7fe:	0f 92       	push	r0
     800:	0f b6       	in	r0, 0x3f	; 63
     802:	0f 92       	push	r0
     804:	11 24       	eor	r1, r1
     806:	2f 93       	push	r18
     808:	3f 93       	push	r19
     80a:	4f 93       	push	r20
     80c:	5f 93       	push	r21
     80e:	6f 93       	push	r22
     810:	7f 93       	push	r23
     812:	8f 93       	push	r24
     814:	9f 93       	push	r25
     816:	af 93       	push	r26
     818:	bf 93       	push	r27
     81a:	ef 93       	push	r30
     81c:	ff 93       	push	r31
	GP_TOIE2_OverFlow();
     81e:	e0 91 80 00 	lds	r30, 0x0080	; 0x800080 <GP_TOIE2_OverFlow>
     822:	f0 91 81 00 	lds	r31, 0x0081	; 0x800081 <GP_TOIE2_OverFlow+0x1>
     826:	09 95       	icall
}
     828:	ff 91       	pop	r31
     82a:	ef 91       	pop	r30
     82c:	bf 91       	pop	r27
     82e:	af 91       	pop	r26
     830:	9f 91       	pop	r25
     832:	8f 91       	pop	r24
     834:	7f 91       	pop	r23
     836:	6f 91       	pop	r22
     838:	5f 91       	pop	r21
     83a:	4f 91       	pop	r20
     83c:	3f 91       	pop	r19
     83e:	2f 91       	pop	r18
     840:	0f 90       	pop	r0
     842:	0f be       	out	0x3f, r0	; 63
     844:	0f 90       	pop	r0
     846:	1f 90       	pop	r1
     848:	18 95       	reti

0000084a <__vector_4>:

void __vector_4 (void) __attribute__((signal));
void __vector_4 (void)
{
     84a:	1f 92       	push	r1
     84c:	0f 92       	push	r0
     84e:	0f b6       	in	r0, 0x3f	; 63
     850:	0f 92       	push	r0
     852:	11 24       	eor	r1, r1
     854:	2f 93       	push	r18
     856:	3f 93       	push	r19
     858:	4f 93       	push	r20
     85a:	5f 93       	push	r21
     85c:	6f 93       	push	r22
     85e:	7f 93       	push	r23
     860:	8f 93       	push	r24
     862:	9f 93       	push	r25
     864:	af 93       	push	r26
     866:	bf 93       	push	r27
     868:	ef 93       	push	r30
     86a:	ff 93       	push	r31
	GP_OCIE2_Compare_Match();
     86c:	e0 91 76 00 	lds	r30, 0x0076	; 0x800076 <__data_end>
     870:	f0 91 77 00 	lds	r31, 0x0077	; 0x800077 <__data_end+0x1>
     874:	09 95       	icall
}
     876:	ff 91       	pop	r31
     878:	ef 91       	pop	r30
     87a:	bf 91       	pop	r27
     87c:	af 91       	pop	r26
     87e:	9f 91       	pop	r25
     880:	8f 91       	pop	r24
     882:	7f 91       	pop	r23
     884:	6f 91       	pop	r22
     886:	5f 91       	pop	r21
     888:	4f 91       	pop	r20
     88a:	3f 91       	pop	r19
     88c:	2f 91       	pop	r18
     88e:	0f 90       	pop	r0
     890:	0f be       	out	0x3f, r0	; 63
     892:	0f 90       	pop	r0
     894:	1f 90       	pop	r1
     896:	18 95       	reti

00000898 <__vector_6>:
//			 |\__________		Timer 1		__________/|
//			 |\_______________________________________/|

void __vector_6 (void) __attribute__((signal));
void __vector_6 (void)
{
     898:	1f 92       	push	r1
     89a:	0f 92       	push	r0
     89c:	0f b6       	in	r0, 0x3f	; 63
     89e:	0f 92       	push	r0
     8a0:	11 24       	eor	r1, r1
     8a2:	2f 93       	push	r18
     8a4:	3f 93       	push	r19
     8a6:	4f 93       	push	r20
     8a8:	5f 93       	push	r21
     8aa:	6f 93       	push	r22
     8ac:	7f 93       	push	r23
     8ae:	8f 93       	push	r24
     8b0:	9f 93       	push	r25
     8b2:	af 93       	push	r26
     8b4:	bf 93       	push	r27
     8b6:	ef 93       	push	r30
     8b8:	ff 93       	push	r31
	GP_TICIE1_InputCapture();
     8ba:	e0 91 7c 00 	lds	r30, 0x007C	; 0x80007c <GP_TICIE1_InputCapture>
     8be:	f0 91 7d 00 	lds	r31, 0x007D	; 0x80007d <GP_TICIE1_InputCapture+0x1>
     8c2:	09 95       	icall

}
     8c4:	ff 91       	pop	r31
     8c6:	ef 91       	pop	r30
     8c8:	bf 91       	pop	r27
     8ca:	af 91       	pop	r26
     8cc:	9f 91       	pop	r25
     8ce:	8f 91       	pop	r24
     8d0:	7f 91       	pop	r23
     8d2:	6f 91       	pop	r22
     8d4:	5f 91       	pop	r21
     8d6:	4f 91       	pop	r20
     8d8:	3f 91       	pop	r19
     8da:	2f 91       	pop	r18
     8dc:	0f 90       	pop	r0
     8de:	0f be       	out	0x3f, r0	; 63
     8e0:	0f 90       	pop	r0
     8e2:	1f 90       	pop	r1
     8e4:	18 95       	reti

000008e6 <__vector_7>:


void __vector_7 (void) __attribute__((signal));
void __vector_7 (void)
{
     8e6:	1f 92       	push	r1
     8e8:	0f 92       	push	r0
     8ea:	0f b6       	in	r0, 0x3f	; 63
     8ec:	0f 92       	push	r0
     8ee:	11 24       	eor	r1, r1
     8f0:	2f 93       	push	r18
     8f2:	3f 93       	push	r19
     8f4:	4f 93       	push	r20
     8f6:	5f 93       	push	r21
     8f8:	6f 93       	push	r22
     8fa:	7f 93       	push	r23
     8fc:	8f 93       	push	r24
     8fe:	9f 93       	push	r25
     900:	af 93       	push	r26
     902:	bf 93       	push	r27
     904:	ef 93       	push	r30
     906:	ff 93       	push	r31
	GP_OCIE1A_Compare_MatchA();
     908:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <GP_OCIE1A_Compare_MatchA>
     90c:	f0 91 85 00 	lds	r31, 0x0085	; 0x800085 <GP_OCIE1A_Compare_MatchA+0x1>
     910:	09 95       	icall
}
     912:	ff 91       	pop	r31
     914:	ef 91       	pop	r30
     916:	bf 91       	pop	r27
     918:	af 91       	pop	r26
     91a:	9f 91       	pop	r25
     91c:	8f 91       	pop	r24
     91e:	7f 91       	pop	r23
     920:	6f 91       	pop	r22
     922:	5f 91       	pop	r21
     924:	4f 91       	pop	r20
     926:	3f 91       	pop	r19
     928:	2f 91       	pop	r18
     92a:	0f 90       	pop	r0
     92c:	0f be       	out	0x3f, r0	; 63
     92e:	0f 90       	pop	r0
     930:	1f 90       	pop	r1
     932:	18 95       	reti

00000934 <__vector_8>:



void __vector_8 (void) __attribute__((signal));
void __vector_8 (void)
{
     934:	1f 92       	push	r1
     936:	0f 92       	push	r0
     938:	0f b6       	in	r0, 0x3f	; 63
     93a:	0f 92       	push	r0
     93c:	11 24       	eor	r1, r1
     93e:	2f 93       	push	r18
     940:	3f 93       	push	r19
     942:	4f 93       	push	r20
     944:	5f 93       	push	r21
     946:	6f 93       	push	r22
     948:	7f 93       	push	r23
     94a:	8f 93       	push	r24
     94c:	9f 93       	push	r25
     94e:	af 93       	push	r26
     950:	bf 93       	push	r27
     952:	ef 93       	push	r30
     954:	ff 93       	push	r31
	GP_OCIE1B_Compare_MatchB();
     956:	e0 91 7a 00 	lds	r30, 0x007A	; 0x80007a <GP_OCIE1B_Compare_MatchB>
     95a:	f0 91 7b 00 	lds	r31, 0x007B	; 0x80007b <GP_OCIE1B_Compare_MatchB+0x1>
     95e:	09 95       	icall

}
     960:	ff 91       	pop	r31
     962:	ef 91       	pop	r30
     964:	bf 91       	pop	r27
     966:	af 91       	pop	r26
     968:	9f 91       	pop	r25
     96a:	8f 91       	pop	r24
     96c:	7f 91       	pop	r23
     96e:	6f 91       	pop	r22
     970:	5f 91       	pop	r21
     972:	4f 91       	pop	r20
     974:	3f 91       	pop	r19
     976:	2f 91       	pop	r18
     978:	0f 90       	pop	r0
     97a:	0f be       	out	0x3f, r0	; 63
     97c:	0f 90       	pop	r0
     97e:	1f 90       	pop	r1
     980:	18 95       	reti

00000982 <__vector_9>:


void __vector_9 (void) __attribute__((signal));
void __vector_9 (void)
{
     982:	1f 92       	push	r1
     984:	0f 92       	push	r0
     986:	0f b6       	in	r0, 0x3f	; 63
     988:	0f 92       	push	r0
     98a:	11 24       	eor	r1, r1
     98c:	2f 93       	push	r18
     98e:	3f 93       	push	r19
     990:	4f 93       	push	r20
     992:	5f 93       	push	r21
     994:	6f 93       	push	r22
     996:	7f 93       	push	r23
     998:	8f 93       	push	r24
     99a:	9f 93       	push	r25
     99c:	af 93       	push	r26
     99e:	bf 93       	push	r27
     9a0:	ef 93       	push	r30
     9a2:	ff 93       	push	r31
	GP_TOIE1_OverFlow();
     9a4:	e0 91 7e 00 	lds	r30, 0x007E	; 0x80007e <GP_TOIE1_OverFlow>
     9a8:	f0 91 7f 00 	lds	r31, 0x007F	; 0x80007f <GP_TOIE1_OverFlow+0x1>
     9ac:	09 95       	icall
}
     9ae:	ff 91       	pop	r31
     9b0:	ef 91       	pop	r30
     9b2:	bf 91       	pop	r27
     9b4:	af 91       	pop	r26
     9b6:	9f 91       	pop	r25
     9b8:	8f 91       	pop	r24
     9ba:	7f 91       	pop	r23
     9bc:	6f 91       	pop	r22
     9be:	5f 91       	pop	r21
     9c0:	4f 91       	pop	r20
     9c2:	3f 91       	pop	r19
     9c4:	2f 91       	pop	r18
     9c6:	0f 90       	pop	r0
     9c8:	0f be       	out	0x3f, r0	; 63
     9ca:	0f 90       	pop	r0
     9cc:	1f 90       	pop	r1
     9ce:	18 95       	reti

000009d0 <__divsf3>:
     9d0:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__divsf3x>
     9d4:	0c 94 dd 05 	jmp	0xbba	; 0xbba <__fp_round>
     9d8:	0e 94 d6 05 	call	0xbac	; 0xbac <__fp_pscB>
     9dc:	58 f0       	brcs	.+22     	; 0x9f4 <__divsf3+0x24>
     9de:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__fp_pscA>
     9e2:	40 f0       	brcs	.+16     	; 0x9f4 <__divsf3+0x24>
     9e4:	29 f4       	brne	.+10     	; 0x9f0 <__divsf3+0x20>
     9e6:	5f 3f       	cpi	r21, 0xFF	; 255
     9e8:	29 f0       	breq	.+10     	; 0x9f4 <__divsf3+0x24>
     9ea:	0c 94 c6 05 	jmp	0xb8c	; 0xb8c <__fp_inf>
     9ee:	51 11       	cpse	r21, r1
     9f0:	0c 94 11 06 	jmp	0xc22	; 0xc22 <__fp_szero>
     9f4:	0c 94 cc 05 	jmp	0xb98	; 0xb98 <__fp_nan>

000009f8 <__divsf3x>:
     9f8:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fp_split3>
     9fc:	68 f3       	brcs	.-38     	; 0x9d8 <__divsf3+0x8>

000009fe <__divsf3_pse>:
     9fe:	99 23       	and	r25, r25
     a00:	b1 f3       	breq	.-20     	; 0x9ee <__divsf3+0x1e>
     a02:	55 23       	and	r21, r21
     a04:	91 f3       	breq	.-28     	; 0x9ea <__divsf3+0x1a>
     a06:	95 1b       	sub	r25, r21
     a08:	55 0b       	sbc	r21, r21
     a0a:	bb 27       	eor	r27, r27
     a0c:	aa 27       	eor	r26, r26
     a0e:	62 17       	cp	r22, r18
     a10:	73 07       	cpc	r23, r19
     a12:	84 07       	cpc	r24, r20
     a14:	38 f0       	brcs	.+14     	; 0xa24 <__divsf3_pse+0x26>
     a16:	9f 5f       	subi	r25, 0xFF	; 255
     a18:	5f 4f       	sbci	r21, 0xFF	; 255
     a1a:	22 0f       	add	r18, r18
     a1c:	33 1f       	adc	r19, r19
     a1e:	44 1f       	adc	r20, r20
     a20:	aa 1f       	adc	r26, r26
     a22:	a9 f3       	breq	.-22     	; 0xa0e <__divsf3_pse+0x10>
     a24:	35 d0       	rcall	.+106    	; 0xa90 <__divsf3_pse+0x92>
     a26:	0e 2e       	mov	r0, r30
     a28:	3a f0       	brmi	.+14     	; 0xa38 <__divsf3_pse+0x3a>
     a2a:	e0 e8       	ldi	r30, 0x80	; 128
     a2c:	32 d0       	rcall	.+100    	; 0xa92 <__divsf3_pse+0x94>
     a2e:	91 50       	subi	r25, 0x01	; 1
     a30:	50 40       	sbci	r21, 0x00	; 0
     a32:	e6 95       	lsr	r30
     a34:	00 1c       	adc	r0, r0
     a36:	ca f7       	brpl	.-14     	; 0xa2a <__divsf3_pse+0x2c>
     a38:	2b d0       	rcall	.+86     	; 0xa90 <__divsf3_pse+0x92>
     a3a:	fe 2f       	mov	r31, r30
     a3c:	29 d0       	rcall	.+82     	; 0xa90 <__divsf3_pse+0x92>
     a3e:	66 0f       	add	r22, r22
     a40:	77 1f       	adc	r23, r23
     a42:	88 1f       	adc	r24, r24
     a44:	bb 1f       	adc	r27, r27
     a46:	26 17       	cp	r18, r22
     a48:	37 07       	cpc	r19, r23
     a4a:	48 07       	cpc	r20, r24
     a4c:	ab 07       	cpc	r26, r27
     a4e:	b0 e8       	ldi	r27, 0x80	; 128
     a50:	09 f0       	breq	.+2      	; 0xa54 <__divsf3_pse+0x56>
     a52:	bb 0b       	sbc	r27, r27
     a54:	80 2d       	mov	r24, r0
     a56:	bf 01       	movw	r22, r30
     a58:	ff 27       	eor	r31, r31
     a5a:	93 58       	subi	r25, 0x83	; 131
     a5c:	5f 4f       	sbci	r21, 0xFF	; 255
     a5e:	3a f0       	brmi	.+14     	; 0xa6e <__divsf3_pse+0x70>
     a60:	9e 3f       	cpi	r25, 0xFE	; 254
     a62:	51 05       	cpc	r21, r1
     a64:	78 f0       	brcs	.+30     	; 0xa84 <__divsf3_pse+0x86>
     a66:	0c 94 c6 05 	jmp	0xb8c	; 0xb8c <__fp_inf>
     a6a:	0c 94 11 06 	jmp	0xc22	; 0xc22 <__fp_szero>
     a6e:	5f 3f       	cpi	r21, 0xFF	; 255
     a70:	e4 f3       	brlt	.-8      	; 0xa6a <__divsf3_pse+0x6c>
     a72:	98 3e       	cpi	r25, 0xE8	; 232
     a74:	d4 f3       	brlt	.-12     	; 0xa6a <__divsf3_pse+0x6c>
     a76:	86 95       	lsr	r24
     a78:	77 95       	ror	r23
     a7a:	67 95       	ror	r22
     a7c:	b7 95       	ror	r27
     a7e:	f7 95       	ror	r31
     a80:	9f 5f       	subi	r25, 0xFF	; 255
     a82:	c9 f7       	brne	.-14     	; 0xa76 <__divsf3_pse+0x78>
     a84:	88 0f       	add	r24, r24
     a86:	91 1d       	adc	r25, r1
     a88:	96 95       	lsr	r25
     a8a:	87 95       	ror	r24
     a8c:	97 f9       	bld	r25, 7
     a8e:	08 95       	ret
     a90:	e1 e0       	ldi	r30, 0x01	; 1
     a92:	66 0f       	add	r22, r22
     a94:	77 1f       	adc	r23, r23
     a96:	88 1f       	adc	r24, r24
     a98:	bb 1f       	adc	r27, r27
     a9a:	62 17       	cp	r22, r18
     a9c:	73 07       	cpc	r23, r19
     a9e:	84 07       	cpc	r24, r20
     aa0:	ba 07       	cpc	r27, r26
     aa2:	20 f0       	brcs	.+8      	; 0xaac <__divsf3_pse+0xae>
     aa4:	62 1b       	sub	r22, r18
     aa6:	73 0b       	sbc	r23, r19
     aa8:	84 0b       	sbc	r24, r20
     aaa:	ba 0b       	sbc	r27, r26
     aac:	ee 1f       	adc	r30, r30
     aae:	88 f7       	brcc	.-30     	; 0xa92 <__divsf3_pse+0x94>
     ab0:	e0 95       	com	r30
     ab2:	08 95       	ret

00000ab4 <__fixunssfsi>:
     ab4:	0e 94 f6 05 	call	0xbec	; 0xbec <__fp_splitA>
     ab8:	88 f0       	brcs	.+34     	; 0xadc <__fixunssfsi+0x28>
     aba:	9f 57       	subi	r25, 0x7F	; 127
     abc:	98 f0       	brcs	.+38     	; 0xae4 <__fixunssfsi+0x30>
     abe:	b9 2f       	mov	r27, r25
     ac0:	99 27       	eor	r25, r25
     ac2:	b7 51       	subi	r27, 0x17	; 23
     ac4:	b0 f0       	brcs	.+44     	; 0xaf2 <__fixunssfsi+0x3e>
     ac6:	e1 f0       	breq	.+56     	; 0xb00 <__fixunssfsi+0x4c>
     ac8:	66 0f       	add	r22, r22
     aca:	77 1f       	adc	r23, r23
     acc:	88 1f       	adc	r24, r24
     ace:	99 1f       	adc	r25, r25
     ad0:	1a f0       	brmi	.+6      	; 0xad8 <__fixunssfsi+0x24>
     ad2:	ba 95       	dec	r27
     ad4:	c9 f7       	brne	.-14     	; 0xac8 <__fixunssfsi+0x14>
     ad6:	14 c0       	rjmp	.+40     	; 0xb00 <__fixunssfsi+0x4c>
     ad8:	b1 30       	cpi	r27, 0x01	; 1
     ada:	91 f0       	breq	.+36     	; 0xb00 <__fixunssfsi+0x4c>
     adc:	0e 94 10 06 	call	0xc20	; 0xc20 <__fp_zero>
     ae0:	b1 e0       	ldi	r27, 0x01	; 1
     ae2:	08 95       	ret
     ae4:	0c 94 10 06 	jmp	0xc20	; 0xc20 <__fp_zero>
     ae8:	67 2f       	mov	r22, r23
     aea:	78 2f       	mov	r23, r24
     aec:	88 27       	eor	r24, r24
     aee:	b8 5f       	subi	r27, 0xF8	; 248
     af0:	39 f0       	breq	.+14     	; 0xb00 <__fixunssfsi+0x4c>
     af2:	b9 3f       	cpi	r27, 0xF9	; 249
     af4:	cc f3       	brlt	.-14     	; 0xae8 <__fixunssfsi+0x34>
     af6:	86 95       	lsr	r24
     af8:	77 95       	ror	r23
     afa:	67 95       	ror	r22
     afc:	b3 95       	inc	r27
     afe:	d9 f7       	brne	.-10     	; 0xaf6 <__fixunssfsi+0x42>
     b00:	3e f4       	brtc	.+14     	; 0xb10 <__fixunssfsi+0x5c>
     b02:	90 95       	com	r25
     b04:	80 95       	com	r24
     b06:	70 95       	com	r23
     b08:	61 95       	neg	r22
     b0a:	7f 4f       	sbci	r23, 0xFF	; 255
     b0c:	8f 4f       	sbci	r24, 0xFF	; 255
     b0e:	9f 4f       	sbci	r25, 0xFF	; 255
     b10:	08 95       	ret

00000b12 <__floatunsisf>:
     b12:	e8 94       	clt
     b14:	09 c0       	rjmp	.+18     	; 0xb28 <__floatsisf+0x12>

00000b16 <__floatsisf>:
     b16:	97 fb       	bst	r25, 7
     b18:	3e f4       	brtc	.+14     	; 0xb28 <__floatsisf+0x12>
     b1a:	90 95       	com	r25
     b1c:	80 95       	com	r24
     b1e:	70 95       	com	r23
     b20:	61 95       	neg	r22
     b22:	7f 4f       	sbci	r23, 0xFF	; 255
     b24:	8f 4f       	sbci	r24, 0xFF	; 255
     b26:	9f 4f       	sbci	r25, 0xFF	; 255
     b28:	99 23       	and	r25, r25
     b2a:	a9 f0       	breq	.+42     	; 0xb56 <__floatsisf+0x40>
     b2c:	f9 2f       	mov	r31, r25
     b2e:	96 e9       	ldi	r25, 0x96	; 150
     b30:	bb 27       	eor	r27, r27
     b32:	93 95       	inc	r25
     b34:	f6 95       	lsr	r31
     b36:	87 95       	ror	r24
     b38:	77 95       	ror	r23
     b3a:	67 95       	ror	r22
     b3c:	b7 95       	ror	r27
     b3e:	f1 11       	cpse	r31, r1
     b40:	f8 cf       	rjmp	.-16     	; 0xb32 <__floatsisf+0x1c>
     b42:	fa f4       	brpl	.+62     	; 0xb82 <__floatsisf+0x6c>
     b44:	bb 0f       	add	r27, r27
     b46:	11 f4       	brne	.+4      	; 0xb4c <__floatsisf+0x36>
     b48:	60 ff       	sbrs	r22, 0
     b4a:	1b c0       	rjmp	.+54     	; 0xb82 <__floatsisf+0x6c>
     b4c:	6f 5f       	subi	r22, 0xFF	; 255
     b4e:	7f 4f       	sbci	r23, 0xFF	; 255
     b50:	8f 4f       	sbci	r24, 0xFF	; 255
     b52:	9f 4f       	sbci	r25, 0xFF	; 255
     b54:	16 c0       	rjmp	.+44     	; 0xb82 <__floatsisf+0x6c>
     b56:	88 23       	and	r24, r24
     b58:	11 f0       	breq	.+4      	; 0xb5e <__floatsisf+0x48>
     b5a:	96 e9       	ldi	r25, 0x96	; 150
     b5c:	11 c0       	rjmp	.+34     	; 0xb80 <__floatsisf+0x6a>
     b5e:	77 23       	and	r23, r23
     b60:	21 f0       	breq	.+8      	; 0xb6a <__floatsisf+0x54>
     b62:	9e e8       	ldi	r25, 0x8E	; 142
     b64:	87 2f       	mov	r24, r23
     b66:	76 2f       	mov	r23, r22
     b68:	05 c0       	rjmp	.+10     	; 0xb74 <__floatsisf+0x5e>
     b6a:	66 23       	and	r22, r22
     b6c:	71 f0       	breq	.+28     	; 0xb8a <__floatsisf+0x74>
     b6e:	96 e8       	ldi	r25, 0x86	; 134
     b70:	86 2f       	mov	r24, r22
     b72:	70 e0       	ldi	r23, 0x00	; 0
     b74:	60 e0       	ldi	r22, 0x00	; 0
     b76:	2a f0       	brmi	.+10     	; 0xb82 <__floatsisf+0x6c>
     b78:	9a 95       	dec	r25
     b7a:	66 0f       	add	r22, r22
     b7c:	77 1f       	adc	r23, r23
     b7e:	88 1f       	adc	r24, r24
     b80:	da f7       	brpl	.-10     	; 0xb78 <__floatsisf+0x62>
     b82:	88 0f       	add	r24, r24
     b84:	96 95       	lsr	r25
     b86:	87 95       	ror	r24
     b88:	97 f9       	bld	r25, 7
     b8a:	08 95       	ret

00000b8c <__fp_inf>:
     b8c:	97 f9       	bld	r25, 7
     b8e:	9f 67       	ori	r25, 0x7F	; 127
     b90:	80 e8       	ldi	r24, 0x80	; 128
     b92:	70 e0       	ldi	r23, 0x00	; 0
     b94:	60 e0       	ldi	r22, 0x00	; 0
     b96:	08 95       	ret

00000b98 <__fp_nan>:
     b98:	9f ef       	ldi	r25, 0xFF	; 255
     b9a:	80 ec       	ldi	r24, 0xC0	; 192
     b9c:	08 95       	ret

00000b9e <__fp_pscA>:
     b9e:	00 24       	eor	r0, r0
     ba0:	0a 94       	dec	r0
     ba2:	16 16       	cp	r1, r22
     ba4:	17 06       	cpc	r1, r23
     ba6:	18 06       	cpc	r1, r24
     ba8:	09 06       	cpc	r0, r25
     baa:	08 95       	ret

00000bac <__fp_pscB>:
     bac:	00 24       	eor	r0, r0
     bae:	0a 94       	dec	r0
     bb0:	12 16       	cp	r1, r18
     bb2:	13 06       	cpc	r1, r19
     bb4:	14 06       	cpc	r1, r20
     bb6:	05 06       	cpc	r0, r21
     bb8:	08 95       	ret

00000bba <__fp_round>:
     bba:	09 2e       	mov	r0, r25
     bbc:	03 94       	inc	r0
     bbe:	00 0c       	add	r0, r0
     bc0:	11 f4       	brne	.+4      	; 0xbc6 <__fp_round+0xc>
     bc2:	88 23       	and	r24, r24
     bc4:	52 f0       	brmi	.+20     	; 0xbda <__fp_round+0x20>
     bc6:	bb 0f       	add	r27, r27
     bc8:	40 f4       	brcc	.+16     	; 0xbda <__fp_round+0x20>
     bca:	bf 2b       	or	r27, r31
     bcc:	11 f4       	brne	.+4      	; 0xbd2 <__fp_round+0x18>
     bce:	60 ff       	sbrs	r22, 0
     bd0:	04 c0       	rjmp	.+8      	; 0xbda <__fp_round+0x20>
     bd2:	6f 5f       	subi	r22, 0xFF	; 255
     bd4:	7f 4f       	sbci	r23, 0xFF	; 255
     bd6:	8f 4f       	sbci	r24, 0xFF	; 255
     bd8:	9f 4f       	sbci	r25, 0xFF	; 255
     bda:	08 95       	ret

00000bdc <__fp_split3>:
     bdc:	57 fd       	sbrc	r21, 7
     bde:	90 58       	subi	r25, 0x80	; 128
     be0:	44 0f       	add	r20, r20
     be2:	55 1f       	adc	r21, r21
     be4:	59 f0       	breq	.+22     	; 0xbfc <__fp_splitA+0x10>
     be6:	5f 3f       	cpi	r21, 0xFF	; 255
     be8:	71 f0       	breq	.+28     	; 0xc06 <__fp_splitA+0x1a>
     bea:	47 95       	ror	r20

00000bec <__fp_splitA>:
     bec:	88 0f       	add	r24, r24
     bee:	97 fb       	bst	r25, 7
     bf0:	99 1f       	adc	r25, r25
     bf2:	61 f0       	breq	.+24     	; 0xc0c <__fp_splitA+0x20>
     bf4:	9f 3f       	cpi	r25, 0xFF	; 255
     bf6:	79 f0       	breq	.+30     	; 0xc16 <__fp_splitA+0x2a>
     bf8:	87 95       	ror	r24
     bfa:	08 95       	ret
     bfc:	12 16       	cp	r1, r18
     bfe:	13 06       	cpc	r1, r19
     c00:	14 06       	cpc	r1, r20
     c02:	55 1f       	adc	r21, r21
     c04:	f2 cf       	rjmp	.-28     	; 0xbea <__fp_split3+0xe>
     c06:	46 95       	lsr	r20
     c08:	f1 df       	rcall	.-30     	; 0xbec <__fp_splitA>
     c0a:	08 c0       	rjmp	.+16     	; 0xc1c <__fp_splitA+0x30>
     c0c:	16 16       	cp	r1, r22
     c0e:	17 06       	cpc	r1, r23
     c10:	18 06       	cpc	r1, r24
     c12:	99 1f       	adc	r25, r25
     c14:	f1 cf       	rjmp	.-30     	; 0xbf8 <__fp_splitA+0xc>
     c16:	86 95       	lsr	r24
     c18:	71 05       	cpc	r23, r1
     c1a:	61 05       	cpc	r22, r1
     c1c:	08 94       	sec
     c1e:	08 95       	ret

00000c20 <__fp_zero>:
     c20:	e8 94       	clt

00000c22 <__fp_szero>:
     c22:	bb 27       	eor	r27, r27
     c24:	66 27       	eor	r22, r22
     c26:	77 27       	eor	r23, r23
     c28:	cb 01       	movw	r24, r22
     c2a:	97 f9       	bld	r25, 7
     c2c:	08 95       	ret

00000c2e <__mulsf3>:
     c2e:	0e 94 2a 06 	call	0xc54	; 0xc54 <__mulsf3x>
     c32:	0c 94 dd 05 	jmp	0xbba	; 0xbba <__fp_round>
     c36:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__fp_pscA>
     c3a:	38 f0       	brcs	.+14     	; 0xc4a <__mulsf3+0x1c>
     c3c:	0e 94 d6 05 	call	0xbac	; 0xbac <__fp_pscB>
     c40:	20 f0       	brcs	.+8      	; 0xc4a <__mulsf3+0x1c>
     c42:	95 23       	and	r25, r21
     c44:	11 f0       	breq	.+4      	; 0xc4a <__mulsf3+0x1c>
     c46:	0c 94 c6 05 	jmp	0xb8c	; 0xb8c <__fp_inf>
     c4a:	0c 94 cc 05 	jmp	0xb98	; 0xb98 <__fp_nan>
     c4e:	11 24       	eor	r1, r1
     c50:	0c 94 11 06 	jmp	0xc22	; 0xc22 <__fp_szero>

00000c54 <__mulsf3x>:
     c54:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fp_split3>
     c58:	70 f3       	brcs	.-36     	; 0xc36 <__mulsf3+0x8>

00000c5a <__mulsf3_pse>:
     c5a:	95 9f       	mul	r25, r21
     c5c:	c1 f3       	breq	.-16     	; 0xc4e <__mulsf3+0x20>
     c5e:	95 0f       	add	r25, r21
     c60:	50 e0       	ldi	r21, 0x00	; 0
     c62:	55 1f       	adc	r21, r21
     c64:	62 9f       	mul	r22, r18
     c66:	f0 01       	movw	r30, r0
     c68:	72 9f       	mul	r23, r18
     c6a:	bb 27       	eor	r27, r27
     c6c:	f0 0d       	add	r31, r0
     c6e:	b1 1d       	adc	r27, r1
     c70:	63 9f       	mul	r22, r19
     c72:	aa 27       	eor	r26, r26
     c74:	f0 0d       	add	r31, r0
     c76:	b1 1d       	adc	r27, r1
     c78:	aa 1f       	adc	r26, r26
     c7a:	64 9f       	mul	r22, r20
     c7c:	66 27       	eor	r22, r22
     c7e:	b0 0d       	add	r27, r0
     c80:	a1 1d       	adc	r26, r1
     c82:	66 1f       	adc	r22, r22
     c84:	82 9f       	mul	r24, r18
     c86:	22 27       	eor	r18, r18
     c88:	b0 0d       	add	r27, r0
     c8a:	a1 1d       	adc	r26, r1
     c8c:	62 1f       	adc	r22, r18
     c8e:	73 9f       	mul	r23, r19
     c90:	b0 0d       	add	r27, r0
     c92:	a1 1d       	adc	r26, r1
     c94:	62 1f       	adc	r22, r18
     c96:	83 9f       	mul	r24, r19
     c98:	a0 0d       	add	r26, r0
     c9a:	61 1d       	adc	r22, r1
     c9c:	22 1f       	adc	r18, r18
     c9e:	74 9f       	mul	r23, r20
     ca0:	33 27       	eor	r19, r19
     ca2:	a0 0d       	add	r26, r0
     ca4:	61 1d       	adc	r22, r1
     ca6:	23 1f       	adc	r18, r19
     ca8:	84 9f       	mul	r24, r20
     caa:	60 0d       	add	r22, r0
     cac:	21 1d       	adc	r18, r1
     cae:	82 2f       	mov	r24, r18
     cb0:	76 2f       	mov	r23, r22
     cb2:	6a 2f       	mov	r22, r26
     cb4:	11 24       	eor	r1, r1
     cb6:	9f 57       	subi	r25, 0x7F	; 127
     cb8:	50 40       	sbci	r21, 0x00	; 0
     cba:	9a f0       	brmi	.+38     	; 0xce2 <__mulsf3_pse+0x88>
     cbc:	f1 f0       	breq	.+60     	; 0xcfa <__mulsf3_pse+0xa0>
     cbe:	88 23       	and	r24, r24
     cc0:	4a f0       	brmi	.+18     	; 0xcd4 <__mulsf3_pse+0x7a>
     cc2:	ee 0f       	add	r30, r30
     cc4:	ff 1f       	adc	r31, r31
     cc6:	bb 1f       	adc	r27, r27
     cc8:	66 1f       	adc	r22, r22
     cca:	77 1f       	adc	r23, r23
     ccc:	88 1f       	adc	r24, r24
     cce:	91 50       	subi	r25, 0x01	; 1
     cd0:	50 40       	sbci	r21, 0x00	; 0
     cd2:	a9 f7       	brne	.-22     	; 0xcbe <__mulsf3_pse+0x64>
     cd4:	9e 3f       	cpi	r25, 0xFE	; 254
     cd6:	51 05       	cpc	r21, r1
     cd8:	80 f0       	brcs	.+32     	; 0xcfa <__mulsf3_pse+0xa0>
     cda:	0c 94 c6 05 	jmp	0xb8c	; 0xb8c <__fp_inf>
     cde:	0c 94 11 06 	jmp	0xc22	; 0xc22 <__fp_szero>
     ce2:	5f 3f       	cpi	r21, 0xFF	; 255
     ce4:	e4 f3       	brlt	.-8      	; 0xcde <__mulsf3_pse+0x84>
     ce6:	98 3e       	cpi	r25, 0xE8	; 232
     ce8:	d4 f3       	brlt	.-12     	; 0xcde <__mulsf3_pse+0x84>
     cea:	86 95       	lsr	r24
     cec:	77 95       	ror	r23
     cee:	67 95       	ror	r22
     cf0:	b7 95       	ror	r27
     cf2:	f7 95       	ror	r31
     cf4:	e7 95       	ror	r30
     cf6:	9f 5f       	subi	r25, 0xFF	; 255
     cf8:	c1 f7       	brne	.-16     	; 0xcea <__mulsf3_pse+0x90>
     cfa:	fe 2b       	or	r31, r30
     cfc:	88 0f       	add	r24, r24
     cfe:	91 1d       	adc	r25, r1
     d00:	96 95       	lsr	r25
     d02:	87 95       	ror	r24
     d04:	97 f9       	bld	r25, 7
     d06:	08 95       	ret

00000d08 <do_rand>:
     d08:	8f 92       	push	r8
     d0a:	9f 92       	push	r9
     d0c:	af 92       	push	r10
     d0e:	bf 92       	push	r11
     d10:	cf 92       	push	r12
     d12:	df 92       	push	r13
     d14:	ef 92       	push	r14
     d16:	ff 92       	push	r15
     d18:	cf 93       	push	r28
     d1a:	df 93       	push	r29
     d1c:	ec 01       	movw	r28, r24
     d1e:	68 81       	ld	r22, Y
     d20:	79 81       	ldd	r23, Y+1	; 0x01
     d22:	8a 81       	ldd	r24, Y+2	; 0x02
     d24:	9b 81       	ldd	r25, Y+3	; 0x03
     d26:	61 15       	cp	r22, r1
     d28:	71 05       	cpc	r23, r1
     d2a:	81 05       	cpc	r24, r1
     d2c:	91 05       	cpc	r25, r1
     d2e:	21 f4       	brne	.+8      	; 0xd38 <do_rand+0x30>
     d30:	64 e2       	ldi	r22, 0x24	; 36
     d32:	79 ed       	ldi	r23, 0xD9	; 217
     d34:	8b e5       	ldi	r24, 0x5B	; 91
     d36:	97 e0       	ldi	r25, 0x07	; 7
     d38:	2d e1       	ldi	r18, 0x1D	; 29
     d3a:	33 ef       	ldi	r19, 0xF3	; 243
     d3c:	41 e0       	ldi	r20, 0x01	; 1
     d3e:	50 e0       	ldi	r21, 0x00	; 0
     d40:	0e 94 93 09 	call	0x1326	; 0x1326 <__divmodsi4>
     d44:	49 01       	movw	r8, r18
     d46:	5a 01       	movw	r10, r20
     d48:	9b 01       	movw	r18, r22
     d4a:	ac 01       	movw	r20, r24
     d4c:	a7 ea       	ldi	r26, 0xA7	; 167
     d4e:	b1 e4       	ldi	r27, 0x41	; 65
     d50:	0e 94 b2 09 	call	0x1364	; 0x1364 <__muluhisi3>
     d54:	6b 01       	movw	r12, r22
     d56:	7c 01       	movw	r14, r24
     d58:	ac ee       	ldi	r26, 0xEC	; 236
     d5a:	b4 ef       	ldi	r27, 0xF4	; 244
     d5c:	a5 01       	movw	r20, r10
     d5e:	94 01       	movw	r18, r8
     d60:	0e 94 c0 09 	call	0x1380	; 0x1380 <__mulohisi3>
     d64:	dc 01       	movw	r26, r24
     d66:	cb 01       	movw	r24, r22
     d68:	8c 0d       	add	r24, r12
     d6a:	9d 1d       	adc	r25, r13
     d6c:	ae 1d       	adc	r26, r14
     d6e:	bf 1d       	adc	r27, r15
     d70:	b7 ff       	sbrs	r27, 7
     d72:	03 c0       	rjmp	.+6      	; 0xd7a <do_rand+0x72>
     d74:	01 97       	sbiw	r24, 0x01	; 1
     d76:	a1 09       	sbc	r26, r1
     d78:	b0 48       	sbci	r27, 0x80	; 128
     d7a:	88 83       	st	Y, r24
     d7c:	99 83       	std	Y+1, r25	; 0x01
     d7e:	aa 83       	std	Y+2, r26	; 0x02
     d80:	bb 83       	std	Y+3, r27	; 0x03
     d82:	9f 77       	andi	r25, 0x7F	; 127
     d84:	df 91       	pop	r29
     d86:	cf 91       	pop	r28
     d88:	ff 90       	pop	r15
     d8a:	ef 90       	pop	r14
     d8c:	df 90       	pop	r13
     d8e:	cf 90       	pop	r12
     d90:	bf 90       	pop	r11
     d92:	af 90       	pop	r10
     d94:	9f 90       	pop	r9
     d96:	8f 90       	pop	r8
     d98:	08 95       	ret

00000d9a <rand_r>:
     d9a:	0e 94 84 06 	call	0xd08	; 0xd08 <do_rand>
     d9e:	08 95       	ret

00000da0 <rand>:
     da0:	80 e6       	ldi	r24, 0x60	; 96
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	0e 94 84 06 	call	0xd08	; 0xd08 <do_rand>
     da8:	08 95       	ret

00000daa <srand>:
     daa:	a0 e0       	ldi	r26, 0x00	; 0
     dac:	b0 e0       	ldi	r27, 0x00	; 0
     dae:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     db2:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     db6:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     dba:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     dbe:	08 95       	ret

00000dc0 <sprintf>:
     dc0:	ae e0       	ldi	r26, 0x0E	; 14
     dc2:	b0 e0       	ldi	r27, 0x00	; 0
     dc4:	e6 ee       	ldi	r30, 0xE6	; 230
     dc6:	f6 e0       	ldi	r31, 0x06	; 6
     dc8:	0c 94 d3 09 	jmp	0x13a6	; 0x13a6 <__prologue_saves__+0x1c>
     dcc:	0d 89       	ldd	r16, Y+21	; 0x15
     dce:	1e 89       	ldd	r17, Y+22	; 0x16
     dd0:	86 e0       	ldi	r24, 0x06	; 6
     dd2:	8c 83       	std	Y+4, r24	; 0x04
     dd4:	1a 83       	std	Y+2, r17	; 0x02
     dd6:	09 83       	std	Y+1, r16	; 0x01
     dd8:	8f ef       	ldi	r24, 0xFF	; 255
     dda:	9f e7       	ldi	r25, 0x7F	; 127
     ddc:	9e 83       	std	Y+6, r25	; 0x06
     dde:	8d 83       	std	Y+5, r24	; 0x05
     de0:	ae 01       	movw	r20, r28
     de2:	47 5e       	subi	r20, 0xE7	; 231
     de4:	5f 4f       	sbci	r21, 0xFF	; 255
     de6:	6f 89       	ldd	r22, Y+23	; 0x17
     de8:	78 8d       	ldd	r23, Y+24	; 0x18
     dea:	ce 01       	movw	r24, r28
     dec:	01 96       	adiw	r24, 0x01	; 1
     dee:	0e 94 02 07 	call	0xe04	; 0xe04 <vfprintf>
     df2:	ef 81       	ldd	r30, Y+7	; 0x07
     df4:	f8 85       	ldd	r31, Y+8	; 0x08
     df6:	e0 0f       	add	r30, r16
     df8:	f1 1f       	adc	r31, r17
     dfa:	10 82       	st	Z, r1
     dfc:	2e 96       	adiw	r28, 0x0e	; 14
     dfe:	e4 e0       	ldi	r30, 0x04	; 4
     e00:	0c 94 ef 09 	jmp	0x13de	; 0x13de <__epilogue_restores__+0x1c>

00000e04 <vfprintf>:
     e04:	ab e0       	ldi	r26, 0x0B	; 11
     e06:	b0 e0       	ldi	r27, 0x00	; 0
     e08:	e8 e0       	ldi	r30, 0x08	; 8
     e0a:	f7 e0       	ldi	r31, 0x07	; 7
     e0c:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__prologue_saves__>
     e10:	6c 01       	movw	r12, r24
     e12:	7b 01       	movw	r14, r22
     e14:	8a 01       	movw	r16, r20
     e16:	fc 01       	movw	r30, r24
     e18:	17 82       	std	Z+7, r1	; 0x07
     e1a:	16 82       	std	Z+6, r1	; 0x06
     e1c:	83 81       	ldd	r24, Z+3	; 0x03
     e1e:	81 ff       	sbrs	r24, 1
     e20:	cc c1       	rjmp	.+920    	; 0x11ba <vfprintf+0x3b6>
     e22:	ce 01       	movw	r24, r28
     e24:	01 96       	adiw	r24, 0x01	; 1
     e26:	3c 01       	movw	r6, r24
     e28:	f6 01       	movw	r30, r12
     e2a:	93 81       	ldd	r25, Z+3	; 0x03
     e2c:	f7 01       	movw	r30, r14
     e2e:	93 fd       	sbrc	r25, 3
     e30:	85 91       	lpm	r24, Z+
     e32:	93 ff       	sbrs	r25, 3
     e34:	81 91       	ld	r24, Z+
     e36:	7f 01       	movw	r14, r30
     e38:	88 23       	and	r24, r24
     e3a:	09 f4       	brne	.+2      	; 0xe3e <vfprintf+0x3a>
     e3c:	ba c1       	rjmp	.+884    	; 0x11b2 <vfprintf+0x3ae>
     e3e:	85 32       	cpi	r24, 0x25	; 37
     e40:	39 f4       	brne	.+14     	; 0xe50 <vfprintf+0x4c>
     e42:	93 fd       	sbrc	r25, 3
     e44:	85 91       	lpm	r24, Z+
     e46:	93 ff       	sbrs	r25, 3
     e48:	81 91       	ld	r24, Z+
     e4a:	7f 01       	movw	r14, r30
     e4c:	85 32       	cpi	r24, 0x25	; 37
     e4e:	29 f4       	brne	.+10     	; 0xe5a <vfprintf+0x56>
     e50:	b6 01       	movw	r22, r12
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <fputc>
     e58:	e7 cf       	rjmp	.-50     	; 0xe28 <vfprintf+0x24>
     e5a:	91 2c       	mov	r9, r1
     e5c:	21 2c       	mov	r2, r1
     e5e:	31 2c       	mov	r3, r1
     e60:	ff e1       	ldi	r31, 0x1F	; 31
     e62:	f3 15       	cp	r31, r3
     e64:	d8 f0       	brcs	.+54     	; 0xe9c <vfprintf+0x98>
     e66:	8b 32       	cpi	r24, 0x2B	; 43
     e68:	79 f0       	breq	.+30     	; 0xe88 <vfprintf+0x84>
     e6a:	38 f4       	brcc	.+14     	; 0xe7a <vfprintf+0x76>
     e6c:	80 32       	cpi	r24, 0x20	; 32
     e6e:	79 f0       	breq	.+30     	; 0xe8e <vfprintf+0x8a>
     e70:	83 32       	cpi	r24, 0x23	; 35
     e72:	a1 f4       	brne	.+40     	; 0xe9c <vfprintf+0x98>
     e74:	23 2d       	mov	r18, r3
     e76:	20 61       	ori	r18, 0x10	; 16
     e78:	1d c0       	rjmp	.+58     	; 0xeb4 <vfprintf+0xb0>
     e7a:	8d 32       	cpi	r24, 0x2D	; 45
     e7c:	61 f0       	breq	.+24     	; 0xe96 <vfprintf+0x92>
     e7e:	80 33       	cpi	r24, 0x30	; 48
     e80:	69 f4       	brne	.+26     	; 0xe9c <vfprintf+0x98>
     e82:	23 2d       	mov	r18, r3
     e84:	21 60       	ori	r18, 0x01	; 1
     e86:	16 c0       	rjmp	.+44     	; 0xeb4 <vfprintf+0xb0>
     e88:	83 2d       	mov	r24, r3
     e8a:	82 60       	ori	r24, 0x02	; 2
     e8c:	38 2e       	mov	r3, r24
     e8e:	e3 2d       	mov	r30, r3
     e90:	e4 60       	ori	r30, 0x04	; 4
     e92:	3e 2e       	mov	r3, r30
     e94:	2a c0       	rjmp	.+84     	; 0xeea <vfprintf+0xe6>
     e96:	f3 2d       	mov	r31, r3
     e98:	f8 60       	ori	r31, 0x08	; 8
     e9a:	1d c0       	rjmp	.+58     	; 0xed6 <vfprintf+0xd2>
     e9c:	37 fc       	sbrc	r3, 7
     e9e:	2d c0       	rjmp	.+90     	; 0xefa <vfprintf+0xf6>
     ea0:	20 ed       	ldi	r18, 0xD0	; 208
     ea2:	28 0f       	add	r18, r24
     ea4:	2a 30       	cpi	r18, 0x0A	; 10
     ea6:	40 f0       	brcs	.+16     	; 0xeb8 <vfprintf+0xb4>
     ea8:	8e 32       	cpi	r24, 0x2E	; 46
     eaa:	b9 f4       	brne	.+46     	; 0xeda <vfprintf+0xd6>
     eac:	36 fc       	sbrc	r3, 6
     eae:	81 c1       	rjmp	.+770    	; 0x11b2 <vfprintf+0x3ae>
     eb0:	23 2d       	mov	r18, r3
     eb2:	20 64       	ori	r18, 0x40	; 64
     eb4:	32 2e       	mov	r3, r18
     eb6:	19 c0       	rjmp	.+50     	; 0xeea <vfprintf+0xe6>
     eb8:	36 fe       	sbrs	r3, 6
     eba:	06 c0       	rjmp	.+12     	; 0xec8 <vfprintf+0xc4>
     ebc:	8a e0       	ldi	r24, 0x0A	; 10
     ebe:	98 9e       	mul	r9, r24
     ec0:	20 0d       	add	r18, r0
     ec2:	11 24       	eor	r1, r1
     ec4:	92 2e       	mov	r9, r18
     ec6:	11 c0       	rjmp	.+34     	; 0xeea <vfprintf+0xe6>
     ec8:	ea e0       	ldi	r30, 0x0A	; 10
     eca:	2e 9e       	mul	r2, r30
     ecc:	20 0d       	add	r18, r0
     ece:	11 24       	eor	r1, r1
     ed0:	22 2e       	mov	r2, r18
     ed2:	f3 2d       	mov	r31, r3
     ed4:	f0 62       	ori	r31, 0x20	; 32
     ed6:	3f 2e       	mov	r3, r31
     ed8:	08 c0       	rjmp	.+16     	; 0xeea <vfprintf+0xe6>
     eda:	8c 36       	cpi	r24, 0x6C	; 108
     edc:	21 f4       	brne	.+8      	; 0xee6 <vfprintf+0xe2>
     ede:	83 2d       	mov	r24, r3
     ee0:	80 68       	ori	r24, 0x80	; 128
     ee2:	38 2e       	mov	r3, r24
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <vfprintf+0xe6>
     ee6:	88 36       	cpi	r24, 0x68	; 104
     ee8:	41 f4       	brne	.+16     	; 0xefa <vfprintf+0xf6>
     eea:	f7 01       	movw	r30, r14
     eec:	93 fd       	sbrc	r25, 3
     eee:	85 91       	lpm	r24, Z+
     ef0:	93 ff       	sbrs	r25, 3
     ef2:	81 91       	ld	r24, Z+
     ef4:	7f 01       	movw	r14, r30
     ef6:	81 11       	cpse	r24, r1
     ef8:	b3 cf       	rjmp	.-154    	; 0xe60 <vfprintf+0x5c>
     efa:	98 2f       	mov	r25, r24
     efc:	9f 7d       	andi	r25, 0xDF	; 223
     efe:	95 54       	subi	r25, 0x45	; 69
     f00:	93 30       	cpi	r25, 0x03	; 3
     f02:	28 f4       	brcc	.+10     	; 0xf0e <vfprintf+0x10a>
     f04:	0c 5f       	subi	r16, 0xFC	; 252
     f06:	1f 4f       	sbci	r17, 0xFF	; 255
     f08:	9f e3       	ldi	r25, 0x3F	; 63
     f0a:	99 83       	std	Y+1, r25	; 0x01
     f0c:	0d c0       	rjmp	.+26     	; 0xf28 <vfprintf+0x124>
     f0e:	83 36       	cpi	r24, 0x63	; 99
     f10:	31 f0       	breq	.+12     	; 0xf1e <vfprintf+0x11a>
     f12:	83 37       	cpi	r24, 0x73	; 115
     f14:	71 f0       	breq	.+28     	; 0xf32 <vfprintf+0x12e>
     f16:	83 35       	cpi	r24, 0x53	; 83
     f18:	09 f0       	breq	.+2      	; 0xf1c <vfprintf+0x118>
     f1a:	59 c0       	rjmp	.+178    	; 0xfce <vfprintf+0x1ca>
     f1c:	21 c0       	rjmp	.+66     	; 0xf60 <vfprintf+0x15c>
     f1e:	f8 01       	movw	r30, r16
     f20:	80 81       	ld	r24, Z
     f22:	89 83       	std	Y+1, r24	; 0x01
     f24:	0e 5f       	subi	r16, 0xFE	; 254
     f26:	1f 4f       	sbci	r17, 0xFF	; 255
     f28:	88 24       	eor	r8, r8
     f2a:	83 94       	inc	r8
     f2c:	91 2c       	mov	r9, r1
     f2e:	53 01       	movw	r10, r6
     f30:	13 c0       	rjmp	.+38     	; 0xf58 <vfprintf+0x154>
     f32:	28 01       	movw	r4, r16
     f34:	f2 e0       	ldi	r31, 0x02	; 2
     f36:	4f 0e       	add	r4, r31
     f38:	51 1c       	adc	r5, r1
     f3a:	f8 01       	movw	r30, r16
     f3c:	a0 80       	ld	r10, Z
     f3e:	b1 80       	ldd	r11, Z+1	; 0x01
     f40:	36 fe       	sbrs	r3, 6
     f42:	03 c0       	rjmp	.+6      	; 0xf4a <vfprintf+0x146>
     f44:	69 2d       	mov	r22, r9
     f46:	70 e0       	ldi	r23, 0x00	; 0
     f48:	02 c0       	rjmp	.+4      	; 0xf4e <vfprintf+0x14a>
     f4a:	6f ef       	ldi	r22, 0xFF	; 255
     f4c:	7f ef       	ldi	r23, 0xFF	; 255
     f4e:	c5 01       	movw	r24, r10
     f50:	0e 94 ee 08 	call	0x11dc	; 0x11dc <strnlen>
     f54:	4c 01       	movw	r8, r24
     f56:	82 01       	movw	r16, r4
     f58:	f3 2d       	mov	r31, r3
     f5a:	ff 77       	andi	r31, 0x7F	; 127
     f5c:	3f 2e       	mov	r3, r31
     f5e:	16 c0       	rjmp	.+44     	; 0xf8c <vfprintf+0x188>
     f60:	28 01       	movw	r4, r16
     f62:	22 e0       	ldi	r18, 0x02	; 2
     f64:	42 0e       	add	r4, r18
     f66:	51 1c       	adc	r5, r1
     f68:	f8 01       	movw	r30, r16
     f6a:	a0 80       	ld	r10, Z
     f6c:	b1 80       	ldd	r11, Z+1	; 0x01
     f6e:	36 fe       	sbrs	r3, 6
     f70:	03 c0       	rjmp	.+6      	; 0xf78 <vfprintf+0x174>
     f72:	69 2d       	mov	r22, r9
     f74:	70 e0       	ldi	r23, 0x00	; 0
     f76:	02 c0       	rjmp	.+4      	; 0xf7c <vfprintf+0x178>
     f78:	6f ef       	ldi	r22, 0xFF	; 255
     f7a:	7f ef       	ldi	r23, 0xFF	; 255
     f7c:	c5 01       	movw	r24, r10
     f7e:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <strnlen_P>
     f82:	4c 01       	movw	r8, r24
     f84:	f3 2d       	mov	r31, r3
     f86:	f0 68       	ori	r31, 0x80	; 128
     f88:	3f 2e       	mov	r3, r31
     f8a:	82 01       	movw	r16, r4
     f8c:	33 fc       	sbrc	r3, 3
     f8e:	1b c0       	rjmp	.+54     	; 0xfc6 <vfprintf+0x1c2>
     f90:	82 2d       	mov	r24, r2
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	88 16       	cp	r8, r24
     f96:	99 06       	cpc	r9, r25
     f98:	b0 f4       	brcc	.+44     	; 0xfc6 <vfprintf+0x1c2>
     f9a:	b6 01       	movw	r22, r12
     f9c:	80 e2       	ldi	r24, 0x20	; 32
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <fputc>
     fa4:	2a 94       	dec	r2
     fa6:	f4 cf       	rjmp	.-24     	; 0xf90 <vfprintf+0x18c>
     fa8:	f5 01       	movw	r30, r10
     faa:	37 fc       	sbrc	r3, 7
     fac:	85 91       	lpm	r24, Z+
     fae:	37 fe       	sbrs	r3, 7
     fb0:	81 91       	ld	r24, Z+
     fb2:	5f 01       	movw	r10, r30
     fb4:	b6 01       	movw	r22, r12
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <fputc>
     fbc:	21 10       	cpse	r2, r1
     fbe:	2a 94       	dec	r2
     fc0:	21 e0       	ldi	r18, 0x01	; 1
     fc2:	82 1a       	sub	r8, r18
     fc4:	91 08       	sbc	r9, r1
     fc6:	81 14       	cp	r8, r1
     fc8:	91 04       	cpc	r9, r1
     fca:	71 f7       	brne	.-36     	; 0xfa8 <vfprintf+0x1a4>
     fcc:	e8 c0       	rjmp	.+464    	; 0x119e <vfprintf+0x39a>
     fce:	84 36       	cpi	r24, 0x64	; 100
     fd0:	11 f0       	breq	.+4      	; 0xfd6 <vfprintf+0x1d2>
     fd2:	89 36       	cpi	r24, 0x69	; 105
     fd4:	41 f5       	brne	.+80     	; 0x1026 <vfprintf+0x222>
     fd6:	f8 01       	movw	r30, r16
     fd8:	37 fe       	sbrs	r3, 7
     fda:	07 c0       	rjmp	.+14     	; 0xfea <vfprintf+0x1e6>
     fdc:	60 81       	ld	r22, Z
     fde:	71 81       	ldd	r23, Z+1	; 0x01
     fe0:	82 81       	ldd	r24, Z+2	; 0x02
     fe2:	93 81       	ldd	r25, Z+3	; 0x03
     fe4:	0c 5f       	subi	r16, 0xFC	; 252
     fe6:	1f 4f       	sbci	r17, 0xFF	; 255
     fe8:	08 c0       	rjmp	.+16     	; 0xffa <vfprintf+0x1f6>
     fea:	60 81       	ld	r22, Z
     fec:	71 81       	ldd	r23, Z+1	; 0x01
     fee:	07 2e       	mov	r0, r23
     ff0:	00 0c       	add	r0, r0
     ff2:	88 0b       	sbc	r24, r24
     ff4:	99 0b       	sbc	r25, r25
     ff6:	0e 5f       	subi	r16, 0xFE	; 254
     ff8:	1f 4f       	sbci	r17, 0xFF	; 255
     ffa:	f3 2d       	mov	r31, r3
     ffc:	ff 76       	andi	r31, 0x6F	; 111
     ffe:	3f 2e       	mov	r3, r31
    1000:	97 ff       	sbrs	r25, 7
    1002:	09 c0       	rjmp	.+18     	; 0x1016 <vfprintf+0x212>
    1004:	90 95       	com	r25
    1006:	80 95       	com	r24
    1008:	70 95       	com	r23
    100a:	61 95       	neg	r22
    100c:	7f 4f       	sbci	r23, 0xFF	; 255
    100e:	8f 4f       	sbci	r24, 0xFF	; 255
    1010:	9f 4f       	sbci	r25, 0xFF	; 255
    1012:	f0 68       	ori	r31, 0x80	; 128
    1014:	3f 2e       	mov	r3, r31
    1016:	2a e0       	ldi	r18, 0x0A	; 10
    1018:	30 e0       	ldi	r19, 0x00	; 0
    101a:	a3 01       	movw	r20, r6
    101c:	0e 94 35 09 	call	0x126a	; 0x126a <__ultoa_invert>
    1020:	88 2e       	mov	r8, r24
    1022:	86 18       	sub	r8, r6
    1024:	45 c0       	rjmp	.+138    	; 0x10b0 <vfprintf+0x2ac>
    1026:	85 37       	cpi	r24, 0x75	; 117
    1028:	31 f4       	brne	.+12     	; 0x1036 <vfprintf+0x232>
    102a:	23 2d       	mov	r18, r3
    102c:	2f 7e       	andi	r18, 0xEF	; 239
    102e:	b2 2e       	mov	r11, r18
    1030:	2a e0       	ldi	r18, 0x0A	; 10
    1032:	30 e0       	ldi	r19, 0x00	; 0
    1034:	25 c0       	rjmp	.+74     	; 0x1080 <vfprintf+0x27c>
    1036:	93 2d       	mov	r25, r3
    1038:	99 7f       	andi	r25, 0xF9	; 249
    103a:	b9 2e       	mov	r11, r25
    103c:	8f 36       	cpi	r24, 0x6F	; 111
    103e:	c1 f0       	breq	.+48     	; 0x1070 <vfprintf+0x26c>
    1040:	18 f4       	brcc	.+6      	; 0x1048 <vfprintf+0x244>
    1042:	88 35       	cpi	r24, 0x58	; 88
    1044:	79 f0       	breq	.+30     	; 0x1064 <vfprintf+0x260>
    1046:	b5 c0       	rjmp	.+362    	; 0x11b2 <vfprintf+0x3ae>
    1048:	80 37       	cpi	r24, 0x70	; 112
    104a:	19 f0       	breq	.+6      	; 0x1052 <vfprintf+0x24e>
    104c:	88 37       	cpi	r24, 0x78	; 120
    104e:	21 f0       	breq	.+8      	; 0x1058 <vfprintf+0x254>
    1050:	b0 c0       	rjmp	.+352    	; 0x11b2 <vfprintf+0x3ae>
    1052:	e9 2f       	mov	r30, r25
    1054:	e0 61       	ori	r30, 0x10	; 16
    1056:	be 2e       	mov	r11, r30
    1058:	b4 fe       	sbrs	r11, 4
    105a:	0d c0       	rjmp	.+26     	; 0x1076 <vfprintf+0x272>
    105c:	fb 2d       	mov	r31, r11
    105e:	f4 60       	ori	r31, 0x04	; 4
    1060:	bf 2e       	mov	r11, r31
    1062:	09 c0       	rjmp	.+18     	; 0x1076 <vfprintf+0x272>
    1064:	34 fe       	sbrs	r3, 4
    1066:	0a c0       	rjmp	.+20     	; 0x107c <vfprintf+0x278>
    1068:	29 2f       	mov	r18, r25
    106a:	26 60       	ori	r18, 0x06	; 6
    106c:	b2 2e       	mov	r11, r18
    106e:	06 c0       	rjmp	.+12     	; 0x107c <vfprintf+0x278>
    1070:	28 e0       	ldi	r18, 0x08	; 8
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	05 c0       	rjmp	.+10     	; 0x1080 <vfprintf+0x27c>
    1076:	20 e1       	ldi	r18, 0x10	; 16
    1078:	30 e0       	ldi	r19, 0x00	; 0
    107a:	02 c0       	rjmp	.+4      	; 0x1080 <vfprintf+0x27c>
    107c:	20 e1       	ldi	r18, 0x10	; 16
    107e:	32 e0       	ldi	r19, 0x02	; 2
    1080:	f8 01       	movw	r30, r16
    1082:	b7 fe       	sbrs	r11, 7
    1084:	07 c0       	rjmp	.+14     	; 0x1094 <vfprintf+0x290>
    1086:	60 81       	ld	r22, Z
    1088:	71 81       	ldd	r23, Z+1	; 0x01
    108a:	82 81       	ldd	r24, Z+2	; 0x02
    108c:	93 81       	ldd	r25, Z+3	; 0x03
    108e:	0c 5f       	subi	r16, 0xFC	; 252
    1090:	1f 4f       	sbci	r17, 0xFF	; 255
    1092:	06 c0       	rjmp	.+12     	; 0x10a0 <vfprintf+0x29c>
    1094:	60 81       	ld	r22, Z
    1096:	71 81       	ldd	r23, Z+1	; 0x01
    1098:	80 e0       	ldi	r24, 0x00	; 0
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	0e 5f       	subi	r16, 0xFE	; 254
    109e:	1f 4f       	sbci	r17, 0xFF	; 255
    10a0:	a3 01       	movw	r20, r6
    10a2:	0e 94 35 09 	call	0x126a	; 0x126a <__ultoa_invert>
    10a6:	88 2e       	mov	r8, r24
    10a8:	86 18       	sub	r8, r6
    10aa:	fb 2d       	mov	r31, r11
    10ac:	ff 77       	andi	r31, 0x7F	; 127
    10ae:	3f 2e       	mov	r3, r31
    10b0:	36 fe       	sbrs	r3, 6
    10b2:	0d c0       	rjmp	.+26     	; 0x10ce <vfprintf+0x2ca>
    10b4:	23 2d       	mov	r18, r3
    10b6:	2e 7f       	andi	r18, 0xFE	; 254
    10b8:	a2 2e       	mov	r10, r18
    10ba:	89 14       	cp	r8, r9
    10bc:	58 f4       	brcc	.+22     	; 0x10d4 <vfprintf+0x2d0>
    10be:	34 fe       	sbrs	r3, 4
    10c0:	0b c0       	rjmp	.+22     	; 0x10d8 <vfprintf+0x2d4>
    10c2:	32 fc       	sbrc	r3, 2
    10c4:	09 c0       	rjmp	.+18     	; 0x10d8 <vfprintf+0x2d4>
    10c6:	83 2d       	mov	r24, r3
    10c8:	8e 7e       	andi	r24, 0xEE	; 238
    10ca:	a8 2e       	mov	r10, r24
    10cc:	05 c0       	rjmp	.+10     	; 0x10d8 <vfprintf+0x2d4>
    10ce:	b8 2c       	mov	r11, r8
    10d0:	a3 2c       	mov	r10, r3
    10d2:	03 c0       	rjmp	.+6      	; 0x10da <vfprintf+0x2d6>
    10d4:	b8 2c       	mov	r11, r8
    10d6:	01 c0       	rjmp	.+2      	; 0x10da <vfprintf+0x2d6>
    10d8:	b9 2c       	mov	r11, r9
    10da:	a4 fe       	sbrs	r10, 4
    10dc:	0f c0       	rjmp	.+30     	; 0x10fc <vfprintf+0x2f8>
    10de:	fe 01       	movw	r30, r28
    10e0:	e8 0d       	add	r30, r8
    10e2:	f1 1d       	adc	r31, r1
    10e4:	80 81       	ld	r24, Z
    10e6:	80 33       	cpi	r24, 0x30	; 48
    10e8:	21 f4       	brne	.+8      	; 0x10f2 <vfprintf+0x2ee>
    10ea:	9a 2d       	mov	r25, r10
    10ec:	99 7e       	andi	r25, 0xE9	; 233
    10ee:	a9 2e       	mov	r10, r25
    10f0:	09 c0       	rjmp	.+18     	; 0x1104 <vfprintf+0x300>
    10f2:	a2 fe       	sbrs	r10, 2
    10f4:	06 c0       	rjmp	.+12     	; 0x1102 <vfprintf+0x2fe>
    10f6:	b3 94       	inc	r11
    10f8:	b3 94       	inc	r11
    10fa:	04 c0       	rjmp	.+8      	; 0x1104 <vfprintf+0x300>
    10fc:	8a 2d       	mov	r24, r10
    10fe:	86 78       	andi	r24, 0x86	; 134
    1100:	09 f0       	breq	.+2      	; 0x1104 <vfprintf+0x300>
    1102:	b3 94       	inc	r11
    1104:	a3 fc       	sbrc	r10, 3
    1106:	11 c0       	rjmp	.+34     	; 0x112a <vfprintf+0x326>
    1108:	a0 fe       	sbrs	r10, 0
    110a:	06 c0       	rjmp	.+12     	; 0x1118 <vfprintf+0x314>
    110c:	b2 14       	cp	r11, r2
    110e:	88 f4       	brcc	.+34     	; 0x1132 <vfprintf+0x32e>
    1110:	28 0c       	add	r2, r8
    1112:	92 2c       	mov	r9, r2
    1114:	9b 18       	sub	r9, r11
    1116:	0e c0       	rjmp	.+28     	; 0x1134 <vfprintf+0x330>
    1118:	b2 14       	cp	r11, r2
    111a:	60 f4       	brcc	.+24     	; 0x1134 <vfprintf+0x330>
    111c:	b6 01       	movw	r22, r12
    111e:	80 e2       	ldi	r24, 0x20	; 32
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <fputc>
    1126:	b3 94       	inc	r11
    1128:	f7 cf       	rjmp	.-18     	; 0x1118 <vfprintf+0x314>
    112a:	b2 14       	cp	r11, r2
    112c:	18 f4       	brcc	.+6      	; 0x1134 <vfprintf+0x330>
    112e:	2b 18       	sub	r2, r11
    1130:	02 c0       	rjmp	.+4      	; 0x1136 <vfprintf+0x332>
    1132:	98 2c       	mov	r9, r8
    1134:	21 2c       	mov	r2, r1
    1136:	a4 fe       	sbrs	r10, 4
    1138:	10 c0       	rjmp	.+32     	; 0x115a <vfprintf+0x356>
    113a:	b6 01       	movw	r22, r12
    113c:	80 e3       	ldi	r24, 0x30	; 48
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <fputc>
    1144:	a2 fe       	sbrs	r10, 2
    1146:	17 c0       	rjmp	.+46     	; 0x1176 <vfprintf+0x372>
    1148:	a1 fc       	sbrc	r10, 1
    114a:	03 c0       	rjmp	.+6      	; 0x1152 <vfprintf+0x34e>
    114c:	88 e7       	ldi	r24, 0x78	; 120
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	02 c0       	rjmp	.+4      	; 0x1156 <vfprintf+0x352>
    1152:	88 e5       	ldi	r24, 0x58	; 88
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	b6 01       	movw	r22, r12
    1158:	0c c0       	rjmp	.+24     	; 0x1172 <vfprintf+0x36e>
    115a:	8a 2d       	mov	r24, r10
    115c:	86 78       	andi	r24, 0x86	; 134
    115e:	59 f0       	breq	.+22     	; 0x1176 <vfprintf+0x372>
    1160:	a1 fe       	sbrs	r10, 1
    1162:	02 c0       	rjmp	.+4      	; 0x1168 <vfprintf+0x364>
    1164:	8b e2       	ldi	r24, 0x2B	; 43
    1166:	01 c0       	rjmp	.+2      	; 0x116a <vfprintf+0x366>
    1168:	80 e2       	ldi	r24, 0x20	; 32
    116a:	a7 fc       	sbrc	r10, 7
    116c:	8d e2       	ldi	r24, 0x2D	; 45
    116e:	b6 01       	movw	r22, r12
    1170:	90 e0       	ldi	r25, 0x00	; 0
    1172:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <fputc>
    1176:	89 14       	cp	r8, r9
    1178:	38 f4       	brcc	.+14     	; 0x1188 <vfprintf+0x384>
    117a:	b6 01       	movw	r22, r12
    117c:	80 e3       	ldi	r24, 0x30	; 48
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <fputc>
    1184:	9a 94       	dec	r9
    1186:	f7 cf       	rjmp	.-18     	; 0x1176 <vfprintf+0x372>
    1188:	8a 94       	dec	r8
    118a:	f3 01       	movw	r30, r6
    118c:	e8 0d       	add	r30, r8
    118e:	f1 1d       	adc	r31, r1
    1190:	80 81       	ld	r24, Z
    1192:	b6 01       	movw	r22, r12
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <fputc>
    119a:	81 10       	cpse	r8, r1
    119c:	f5 cf       	rjmp	.-22     	; 0x1188 <vfprintf+0x384>
    119e:	22 20       	and	r2, r2
    11a0:	09 f4       	brne	.+2      	; 0x11a4 <vfprintf+0x3a0>
    11a2:	42 ce       	rjmp	.-892    	; 0xe28 <vfprintf+0x24>
    11a4:	b6 01       	movw	r22, r12
    11a6:	80 e2       	ldi	r24, 0x20	; 32
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <fputc>
    11ae:	2a 94       	dec	r2
    11b0:	f6 cf       	rjmp	.-20     	; 0x119e <vfprintf+0x39a>
    11b2:	f6 01       	movw	r30, r12
    11b4:	86 81       	ldd	r24, Z+6	; 0x06
    11b6:	97 81       	ldd	r25, Z+7	; 0x07
    11b8:	02 c0       	rjmp	.+4      	; 0x11be <vfprintf+0x3ba>
    11ba:	8f ef       	ldi	r24, 0xFF	; 255
    11bc:	9f ef       	ldi	r25, 0xFF	; 255
    11be:	2b 96       	adiw	r28, 0x0b	; 11
    11c0:	e2 e1       	ldi	r30, 0x12	; 18
    11c2:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <__epilogue_restores__>

000011c6 <strnlen_P>:
    11c6:	fc 01       	movw	r30, r24
    11c8:	05 90       	lpm	r0, Z+
    11ca:	61 50       	subi	r22, 0x01	; 1
    11cc:	70 40       	sbci	r23, 0x00	; 0
    11ce:	01 10       	cpse	r0, r1
    11d0:	d8 f7       	brcc	.-10     	; 0x11c8 <strnlen_P+0x2>
    11d2:	80 95       	com	r24
    11d4:	90 95       	com	r25
    11d6:	8e 0f       	add	r24, r30
    11d8:	9f 1f       	adc	r25, r31
    11da:	08 95       	ret

000011dc <strnlen>:
    11dc:	fc 01       	movw	r30, r24
    11de:	61 50       	subi	r22, 0x01	; 1
    11e0:	70 40       	sbci	r23, 0x00	; 0
    11e2:	01 90       	ld	r0, Z+
    11e4:	01 10       	cpse	r0, r1
    11e6:	d8 f7       	brcc	.-10     	; 0x11de <strnlen+0x2>
    11e8:	80 95       	com	r24
    11ea:	90 95       	com	r25
    11ec:	8e 0f       	add	r24, r30
    11ee:	9f 1f       	adc	r25, r31
    11f0:	08 95       	ret

000011f2 <fputc>:
    11f2:	0f 93       	push	r16
    11f4:	1f 93       	push	r17
    11f6:	cf 93       	push	r28
    11f8:	df 93       	push	r29
    11fa:	fb 01       	movw	r30, r22
    11fc:	23 81       	ldd	r18, Z+3	; 0x03
    11fe:	21 fd       	sbrc	r18, 1
    1200:	03 c0       	rjmp	.+6      	; 0x1208 <fputc+0x16>
    1202:	8f ef       	ldi	r24, 0xFF	; 255
    1204:	9f ef       	ldi	r25, 0xFF	; 255
    1206:	2c c0       	rjmp	.+88     	; 0x1260 <fputc+0x6e>
    1208:	22 ff       	sbrs	r18, 2
    120a:	16 c0       	rjmp	.+44     	; 0x1238 <fputc+0x46>
    120c:	46 81       	ldd	r20, Z+6	; 0x06
    120e:	57 81       	ldd	r21, Z+7	; 0x07
    1210:	24 81       	ldd	r18, Z+4	; 0x04
    1212:	35 81       	ldd	r19, Z+5	; 0x05
    1214:	42 17       	cp	r20, r18
    1216:	53 07       	cpc	r21, r19
    1218:	44 f4       	brge	.+16     	; 0x122a <fputc+0x38>
    121a:	a0 81       	ld	r26, Z
    121c:	b1 81       	ldd	r27, Z+1	; 0x01
    121e:	9d 01       	movw	r18, r26
    1220:	2f 5f       	subi	r18, 0xFF	; 255
    1222:	3f 4f       	sbci	r19, 0xFF	; 255
    1224:	31 83       	std	Z+1, r19	; 0x01
    1226:	20 83       	st	Z, r18
    1228:	8c 93       	st	X, r24
    122a:	26 81       	ldd	r18, Z+6	; 0x06
    122c:	37 81       	ldd	r19, Z+7	; 0x07
    122e:	2f 5f       	subi	r18, 0xFF	; 255
    1230:	3f 4f       	sbci	r19, 0xFF	; 255
    1232:	37 83       	std	Z+7, r19	; 0x07
    1234:	26 83       	std	Z+6, r18	; 0x06
    1236:	14 c0       	rjmp	.+40     	; 0x1260 <fputc+0x6e>
    1238:	8b 01       	movw	r16, r22
    123a:	ec 01       	movw	r28, r24
    123c:	fb 01       	movw	r30, r22
    123e:	00 84       	ldd	r0, Z+8	; 0x08
    1240:	f1 85       	ldd	r31, Z+9	; 0x09
    1242:	e0 2d       	mov	r30, r0
    1244:	09 95       	icall
    1246:	89 2b       	or	r24, r25
    1248:	e1 f6       	brne	.-72     	; 0x1202 <fputc+0x10>
    124a:	d8 01       	movw	r26, r16
    124c:	16 96       	adiw	r26, 0x06	; 6
    124e:	8d 91       	ld	r24, X+
    1250:	9c 91       	ld	r25, X
    1252:	17 97       	sbiw	r26, 0x07	; 7
    1254:	01 96       	adiw	r24, 0x01	; 1
    1256:	17 96       	adiw	r26, 0x07	; 7
    1258:	9c 93       	st	X, r25
    125a:	8e 93       	st	-X, r24
    125c:	16 97       	sbiw	r26, 0x06	; 6
    125e:	ce 01       	movw	r24, r28
    1260:	df 91       	pop	r29
    1262:	cf 91       	pop	r28
    1264:	1f 91       	pop	r17
    1266:	0f 91       	pop	r16
    1268:	08 95       	ret

0000126a <__ultoa_invert>:
    126a:	fa 01       	movw	r30, r20
    126c:	aa 27       	eor	r26, r26
    126e:	28 30       	cpi	r18, 0x08	; 8
    1270:	51 f1       	breq	.+84     	; 0x12c6 <__ultoa_invert+0x5c>
    1272:	20 31       	cpi	r18, 0x10	; 16
    1274:	81 f1       	breq	.+96     	; 0x12d6 <__ultoa_invert+0x6c>
    1276:	e8 94       	clt
    1278:	6f 93       	push	r22
    127a:	6e 7f       	andi	r22, 0xFE	; 254
    127c:	6e 5f       	subi	r22, 0xFE	; 254
    127e:	7f 4f       	sbci	r23, 0xFF	; 255
    1280:	8f 4f       	sbci	r24, 0xFF	; 255
    1282:	9f 4f       	sbci	r25, 0xFF	; 255
    1284:	af 4f       	sbci	r26, 0xFF	; 255
    1286:	b1 e0       	ldi	r27, 0x01	; 1
    1288:	3e d0       	rcall	.+124    	; 0x1306 <__ultoa_invert+0x9c>
    128a:	b4 e0       	ldi	r27, 0x04	; 4
    128c:	3c d0       	rcall	.+120    	; 0x1306 <__ultoa_invert+0x9c>
    128e:	67 0f       	add	r22, r23
    1290:	78 1f       	adc	r23, r24
    1292:	89 1f       	adc	r24, r25
    1294:	9a 1f       	adc	r25, r26
    1296:	a1 1d       	adc	r26, r1
    1298:	68 0f       	add	r22, r24
    129a:	79 1f       	adc	r23, r25
    129c:	8a 1f       	adc	r24, r26
    129e:	91 1d       	adc	r25, r1
    12a0:	a1 1d       	adc	r26, r1
    12a2:	6a 0f       	add	r22, r26
    12a4:	71 1d       	adc	r23, r1
    12a6:	81 1d       	adc	r24, r1
    12a8:	91 1d       	adc	r25, r1
    12aa:	a1 1d       	adc	r26, r1
    12ac:	20 d0       	rcall	.+64     	; 0x12ee <__ultoa_invert+0x84>
    12ae:	09 f4       	brne	.+2      	; 0x12b2 <__ultoa_invert+0x48>
    12b0:	68 94       	set
    12b2:	3f 91       	pop	r19
    12b4:	2a e0       	ldi	r18, 0x0A	; 10
    12b6:	26 9f       	mul	r18, r22
    12b8:	11 24       	eor	r1, r1
    12ba:	30 19       	sub	r19, r0
    12bc:	30 5d       	subi	r19, 0xD0	; 208
    12be:	31 93       	st	Z+, r19
    12c0:	de f6       	brtc	.-74     	; 0x1278 <__ultoa_invert+0xe>
    12c2:	cf 01       	movw	r24, r30
    12c4:	08 95       	ret
    12c6:	46 2f       	mov	r20, r22
    12c8:	47 70       	andi	r20, 0x07	; 7
    12ca:	40 5d       	subi	r20, 0xD0	; 208
    12cc:	41 93       	st	Z+, r20
    12ce:	b3 e0       	ldi	r27, 0x03	; 3
    12d0:	0f d0       	rcall	.+30     	; 0x12f0 <__ultoa_invert+0x86>
    12d2:	c9 f7       	brne	.-14     	; 0x12c6 <__ultoa_invert+0x5c>
    12d4:	f6 cf       	rjmp	.-20     	; 0x12c2 <__ultoa_invert+0x58>
    12d6:	46 2f       	mov	r20, r22
    12d8:	4f 70       	andi	r20, 0x0F	; 15
    12da:	40 5d       	subi	r20, 0xD0	; 208
    12dc:	4a 33       	cpi	r20, 0x3A	; 58
    12de:	18 f0       	brcs	.+6      	; 0x12e6 <__ultoa_invert+0x7c>
    12e0:	49 5d       	subi	r20, 0xD9	; 217
    12e2:	31 fd       	sbrc	r19, 1
    12e4:	40 52       	subi	r20, 0x20	; 32
    12e6:	41 93       	st	Z+, r20
    12e8:	02 d0       	rcall	.+4      	; 0x12ee <__ultoa_invert+0x84>
    12ea:	a9 f7       	brne	.-22     	; 0x12d6 <__ultoa_invert+0x6c>
    12ec:	ea cf       	rjmp	.-44     	; 0x12c2 <__ultoa_invert+0x58>
    12ee:	b4 e0       	ldi	r27, 0x04	; 4
    12f0:	a6 95       	lsr	r26
    12f2:	97 95       	ror	r25
    12f4:	87 95       	ror	r24
    12f6:	77 95       	ror	r23
    12f8:	67 95       	ror	r22
    12fa:	ba 95       	dec	r27
    12fc:	c9 f7       	brne	.-14     	; 0x12f0 <__ultoa_invert+0x86>
    12fe:	00 97       	sbiw	r24, 0x00	; 0
    1300:	61 05       	cpc	r22, r1
    1302:	71 05       	cpc	r23, r1
    1304:	08 95       	ret
    1306:	9b 01       	movw	r18, r22
    1308:	ac 01       	movw	r20, r24
    130a:	0a 2e       	mov	r0, r26
    130c:	06 94       	lsr	r0
    130e:	57 95       	ror	r21
    1310:	47 95       	ror	r20
    1312:	37 95       	ror	r19
    1314:	27 95       	ror	r18
    1316:	ba 95       	dec	r27
    1318:	c9 f7       	brne	.-14     	; 0x130c <__ultoa_invert+0xa2>
    131a:	62 0f       	add	r22, r18
    131c:	73 1f       	adc	r23, r19
    131e:	84 1f       	adc	r24, r20
    1320:	95 1f       	adc	r25, r21
    1322:	a0 1d       	adc	r26, r0
    1324:	08 95       	ret

00001326 <__divmodsi4>:
    1326:	05 2e       	mov	r0, r21
    1328:	97 fb       	bst	r25, 7
    132a:	1e f4       	brtc	.+6      	; 0x1332 <__divmodsi4+0xc>
    132c:	00 94       	com	r0
    132e:	0e 94 aa 09 	call	0x1354	; 0x1354 <__negsi2>
    1332:	57 fd       	sbrc	r21, 7
    1334:	07 d0       	rcall	.+14     	; 0x1344 <__divmodsi4_neg2>
    1336:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__udivmodsi4>
    133a:	07 fc       	sbrc	r0, 7
    133c:	03 d0       	rcall	.+6      	; 0x1344 <__divmodsi4_neg2>
    133e:	4e f4       	brtc	.+18     	; 0x1352 <__divmodsi4_exit>
    1340:	0c 94 aa 09 	jmp	0x1354	; 0x1354 <__negsi2>

00001344 <__divmodsi4_neg2>:
    1344:	50 95       	com	r21
    1346:	40 95       	com	r20
    1348:	30 95       	com	r19
    134a:	21 95       	neg	r18
    134c:	3f 4f       	sbci	r19, 0xFF	; 255
    134e:	4f 4f       	sbci	r20, 0xFF	; 255
    1350:	5f 4f       	sbci	r21, 0xFF	; 255

00001352 <__divmodsi4_exit>:
    1352:	08 95       	ret

00001354 <__negsi2>:
    1354:	90 95       	com	r25
    1356:	80 95       	com	r24
    1358:	70 95       	com	r23
    135a:	61 95       	neg	r22
    135c:	7f 4f       	sbci	r23, 0xFF	; 255
    135e:	8f 4f       	sbci	r24, 0xFF	; 255
    1360:	9f 4f       	sbci	r25, 0xFF	; 255
    1362:	08 95       	ret

00001364 <__muluhisi3>:
    1364:	0e 94 1e 0a 	call	0x143c	; 0x143c <__umulhisi3>
    1368:	a5 9f       	mul	r26, r21
    136a:	90 0d       	add	r25, r0
    136c:	b4 9f       	mul	r27, r20
    136e:	90 0d       	add	r25, r0
    1370:	a4 9f       	mul	r26, r20
    1372:	80 0d       	add	r24, r0
    1374:	91 1d       	adc	r25, r1
    1376:	11 24       	eor	r1, r1
    1378:	08 95       	ret

0000137a <__mulshisi3>:
    137a:	b7 ff       	sbrs	r27, 7
    137c:	0c 94 b2 09 	jmp	0x1364	; 0x1364 <__muluhisi3>

00001380 <__mulohisi3>:
    1380:	0e 94 b2 09 	call	0x1364	; 0x1364 <__muluhisi3>
    1384:	82 1b       	sub	r24, r18
    1386:	93 0b       	sbc	r25, r19
    1388:	08 95       	ret

0000138a <__prologue_saves__>:
    138a:	2f 92       	push	r2
    138c:	3f 92       	push	r3
    138e:	4f 92       	push	r4
    1390:	5f 92       	push	r5
    1392:	6f 92       	push	r6
    1394:	7f 92       	push	r7
    1396:	8f 92       	push	r8
    1398:	9f 92       	push	r9
    139a:	af 92       	push	r10
    139c:	bf 92       	push	r11
    139e:	cf 92       	push	r12
    13a0:	df 92       	push	r13
    13a2:	ef 92       	push	r14
    13a4:	ff 92       	push	r15
    13a6:	0f 93       	push	r16
    13a8:	1f 93       	push	r17
    13aa:	cf 93       	push	r28
    13ac:	df 93       	push	r29
    13ae:	cd b7       	in	r28, 0x3d	; 61
    13b0:	de b7       	in	r29, 0x3e	; 62
    13b2:	ca 1b       	sub	r28, r26
    13b4:	db 0b       	sbc	r29, r27
    13b6:	0f b6       	in	r0, 0x3f	; 63
    13b8:	f8 94       	cli
    13ba:	de bf       	out	0x3e, r29	; 62
    13bc:	0f be       	out	0x3f, r0	; 63
    13be:	cd bf       	out	0x3d, r28	; 61
    13c0:	09 94       	ijmp

000013c2 <__epilogue_restores__>:
    13c2:	2a 88       	ldd	r2, Y+18	; 0x12
    13c4:	39 88       	ldd	r3, Y+17	; 0x11
    13c6:	48 88       	ldd	r4, Y+16	; 0x10
    13c8:	5f 84       	ldd	r5, Y+15	; 0x0f
    13ca:	6e 84       	ldd	r6, Y+14	; 0x0e
    13cc:	7d 84       	ldd	r7, Y+13	; 0x0d
    13ce:	8c 84       	ldd	r8, Y+12	; 0x0c
    13d0:	9b 84       	ldd	r9, Y+11	; 0x0b
    13d2:	aa 84       	ldd	r10, Y+10	; 0x0a
    13d4:	b9 84       	ldd	r11, Y+9	; 0x09
    13d6:	c8 84       	ldd	r12, Y+8	; 0x08
    13d8:	df 80       	ldd	r13, Y+7	; 0x07
    13da:	ee 80       	ldd	r14, Y+6	; 0x06
    13dc:	fd 80       	ldd	r15, Y+5	; 0x05
    13de:	0c 81       	ldd	r16, Y+4	; 0x04
    13e0:	1b 81       	ldd	r17, Y+3	; 0x03
    13e2:	aa 81       	ldd	r26, Y+2	; 0x02
    13e4:	b9 81       	ldd	r27, Y+1	; 0x01
    13e6:	ce 0f       	add	r28, r30
    13e8:	d1 1d       	adc	r29, r1
    13ea:	0f b6       	in	r0, 0x3f	; 63
    13ec:	f8 94       	cli
    13ee:	de bf       	out	0x3e, r29	; 62
    13f0:	0f be       	out	0x3f, r0	; 63
    13f2:	cd bf       	out	0x3d, r28	; 61
    13f4:	ed 01       	movw	r28, r26
    13f6:	08 95       	ret

000013f8 <__udivmodsi4>:
    13f8:	a1 e2       	ldi	r26, 0x21	; 33
    13fa:	1a 2e       	mov	r1, r26
    13fc:	aa 1b       	sub	r26, r26
    13fe:	bb 1b       	sub	r27, r27
    1400:	fd 01       	movw	r30, r26
    1402:	0d c0       	rjmp	.+26     	; 0x141e <__udivmodsi4_ep>

00001404 <__udivmodsi4_loop>:
    1404:	aa 1f       	adc	r26, r26
    1406:	bb 1f       	adc	r27, r27
    1408:	ee 1f       	adc	r30, r30
    140a:	ff 1f       	adc	r31, r31
    140c:	a2 17       	cp	r26, r18
    140e:	b3 07       	cpc	r27, r19
    1410:	e4 07       	cpc	r30, r20
    1412:	f5 07       	cpc	r31, r21
    1414:	20 f0       	brcs	.+8      	; 0x141e <__udivmodsi4_ep>
    1416:	a2 1b       	sub	r26, r18
    1418:	b3 0b       	sbc	r27, r19
    141a:	e4 0b       	sbc	r30, r20
    141c:	f5 0b       	sbc	r31, r21

0000141e <__udivmodsi4_ep>:
    141e:	66 1f       	adc	r22, r22
    1420:	77 1f       	adc	r23, r23
    1422:	88 1f       	adc	r24, r24
    1424:	99 1f       	adc	r25, r25
    1426:	1a 94       	dec	r1
    1428:	69 f7       	brne	.-38     	; 0x1404 <__udivmodsi4_loop>
    142a:	60 95       	com	r22
    142c:	70 95       	com	r23
    142e:	80 95       	com	r24
    1430:	90 95       	com	r25
    1432:	9b 01       	movw	r18, r22
    1434:	ac 01       	movw	r20, r24
    1436:	bd 01       	movw	r22, r26
    1438:	cf 01       	movw	r24, r30
    143a:	08 95       	ret

0000143c <__umulhisi3>:
    143c:	a2 9f       	mul	r26, r18
    143e:	b0 01       	movw	r22, r0
    1440:	b3 9f       	mul	r27, r19
    1442:	c0 01       	movw	r24, r0
    1444:	a3 9f       	mul	r26, r19
    1446:	70 0d       	add	r23, r0
    1448:	81 1d       	adc	r24, r1
    144a:	11 24       	eor	r1, r1
    144c:	91 1d       	adc	r25, r1
    144e:	b2 9f       	mul	r27, r18
    1450:	70 0d       	add	r23, r0
    1452:	81 1d       	adc	r24, r1
    1454:	11 24       	eor	r1, r1
    1456:	91 1d       	adc	r25, r1
    1458:	08 95       	ret

0000145a <_exit>:
    145a:	f8 94       	cli

0000145c <__stop_program>:
    145c:	ff cf       	rjmp	.-2      	; 0x145c <__stop_program>
